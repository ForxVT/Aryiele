<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="Project" targetName="check-llvm-transforms-globaldce" />
      <config projectName="Project" targetName="llvm-link" />
      <config projectName="Project" targetName="LLVMPowerPCAsmPrinter" />
      <config projectName="Project" targetName="install-LLVMAArch64CodeGen-stripped" />
      <config projectName="Project" targetName="install-LLVMFuzzMutate-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-avr-out-of-range-fixups" />
      <config projectName="Project" targetName="install-LLVMAsmParser" />
      <config projectName="Project" targetName="LLVMNVPTXCodeGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-pdbdump" />
      <config projectName="Project" targetName="check-llvm-transforms-loopidiom" />
      <config projectName="Project" targetName="LLVMLanaiCodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll-aarch64" />
      <config projectName="Project" targetName="install-llvm-as-stripped" />
      <config projectName="Project" targetName="install-LLVMSystemZAsmParser" />
      <config projectName="Project" targetName="LLVMDebugInfoDWARF" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-nm-aarch64" />
      <config projectName="Project" targetName="check-llvm-debuginfo-powerpc" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-micromips-dspr3" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-micromips-dspr2" />
      <config projectName="Project" targetName="check-llvm-mc-coff" />
      <config projectName="Project" targetName="llvm-cxxdump" />
      <config projectName="Project" targetName="PipSqueak" />
      <config projectName="Project" targetName="install-llvm-mca-stripped" />
      <config projectName="Project" targetName="install-cmake-exports" />
      <config projectName="Project" targetName="install-LLVMAMDGPUUtils-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-atomicexpand" />
      <config projectName="Project" targetName="sancov" />
      <config projectName="Project" targetName="check-llvm-mc-mips-micromips" />
      <config projectName="Project" targetName="install-LLVMSystemZInfo" />
      <config projectName="Project" targetName="install-llvm-mc" />
      <config projectName="Project" targetName="check-llvm-bitcode" />
      <config projectName="Project" targetName="install-LLVMDebugInfoDWARF-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-opt-report" />
      <config projectName="Project" targetName="llvm-diff" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-symbolizer-pdb" />
      <config projectName="Project" targetName="install-LLVMPowerPCCodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-instsimplify" />
      <config projectName="Project" targetName="check-llvm-mc-macho-aarch64" />
      <config projectName="Project" targetName="check-llvm-analysis-dependenceanalysis" />
      <config projectName="Project" targetName="LLVMARMAsmParser" />
      <config projectName="Project" targetName="check-llvm-metal" />
      <config projectName="Project" targetName="check-llvm-codegen-hexagon" />
      <config projectName="Project" targetName="LLVMSparcDisassembler" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-xray-x86" />
      <config projectName="Project" targetName="llvm-test-depends" />
      <config projectName="Project" targetName="install-LLVMARMAsmPrinter" />
      <config projectName="Project" targetName="OptionTests" />
      <config projectName="Project" targetName="check-llvm-instrumentation-addresssanitizer" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld-arm" />
      <config projectName="Project" targetName="llvm-demangle-fuzzer" />
      <config projectName="Project" targetName="llvm-lto2" />
      <config projectName="Project" targetName="check-llvm-codegen-x86-gc" />
      <config projectName="Project" targetName="LLVMAArch64AsmPrinter" />
      <config projectName="Project" targetName="install-LLVMAMDGPUDisassembler" />
      <config projectName="Project" targetName="check-llvm-yamlparser" />
      <config projectName="Project" targetName="IPOTests" />
      <config projectName="Project" targetName="check-llvm-transforms-objcarc" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-znver1" />
      <config projectName="Project" targetName="install-LLVMARMAsmPrinter-stripped" />
      <config projectName="Project" targetName="install-llvm-cat-stripped" />
      <config projectName="Project" targetName="LLVMARMDisassembler" />
      <config projectName="Project" targetName="install-dsymutil" />
      <config projectName="Project" targetName="install-LLVMDemangle" />
      <config projectName="Project" targetName="DynamicLibraryTests" />
      <config projectName="Project" targetName="check-llvm-mc-mips-ginv" />
      <config projectName="Project" targetName="yaml2obj" />
      <config projectName="Project" targetName="DemangleTests" />
      <config projectName="Project" targetName="install-LLVMX86CodeGen-stripped" />
      <config projectName="Project" targetName="LLVMAMDGPUAsmParser" />
      <config projectName="Project" targetName="LibOptionsTableGen" />
      <config projectName="Project" targetName="install-LLVMLTO" />
      <config projectName="Project" targetName="check-llvm-objectyaml-wasm" />
      <config projectName="Project" targetName="LLVMInstrumentation" />
      <config projectName="Project" targetName="install-LLVMCoroutines-stripped" />
      <config projectName="Project" targetName="install-LLVMOrcJIT" />
      <config projectName="Project" targetName="check-llvm-transforms-functionattrs" />
      <config projectName="Project" targetName="check-llvm-analysis-phivalues" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld-aarch64" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-isel-fuzzer" />
      <config projectName="Project" targetName="llvm-cfi-verify" />
      <config projectName="Project" targetName="LLVMAArch64CodeGen" />
      <config projectName="Project" targetName="install-LLVMPowerPCAsmPrinter-stripped" />
      <config projectName="Project" targetName="install-llvm-size-stripped" />
      <config projectName="Project" targetName="install-LLVMAArch64AsmPrinter" />
      <config projectName="Project" targetName="LLVMAnalysis" />
      <config projectName="Project" targetName="check-llvm-transforms-calledvaluepropagation" />
      <config projectName="Project" targetName="check-llvm-transforms-jumpthreading" />
      <config projectName="Project" targetName="check-llvm-thinlto-x86" />
      <config projectName="Project" targetName="install-LLVMDebugInfoCodeView-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-metarenamer" />
      <config projectName="Project" targetName="check-llvm-instrumentation-memorysanitizer" />
      <config projectName="Project" targetName="AttributeCompatFuncTableGen" />
      <config projectName="Project" targetName="LLVMAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips64r6" />
      <config projectName="Project" targetName="install-LLVMAMDGPUAsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-globalisel-llvm-ir" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips64r3" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips64r2" />
      <config projectName="Project" targetName="KillTheDoctor" />
      <config projectName="Project" targetName="llvm-profdata" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-mirparser" />
      <config projectName="Project" targetName="LLVMBPFDisassembler" />
      <config projectName="Project" targetName="install-llvm-symbolizer-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-rewritestatepointsforgc" />
      <config projectName="Project" targetName="install-llvm-lib-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-safestack-aarch64" />
      <config projectName="Project" targetName="LLVMOption" />
      <config projectName="Project" targetName="check-llvm-codegen-systemz" />
      <config projectName="Project" targetName="check-llvm-transforms-argumentpromotion" />
      <config projectName="Project" targetName="LLVMHexagonDisassembler" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-powerpc" />
      <config projectName="Project" targetName="install-llvm-strings" />
      <config projectName="Project" targetName="check-llvm-bindings-go" />
      <config projectName="Project" targetName="install-llvm-headers-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-arm-alignedbundling" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-thinltobitcodewriter-x86" />
      <config projectName="Project" targetName="check-llvm-bindings" />
      <config projectName="Project" targetName="LLVMDebugInfoMSF" />
      <config projectName="Project" targetName="install-llvm-ar-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips4" />
      <config projectName="Project" targetName="install-llvm-rtdyld" />
      <config projectName="Project" targetName="install-LLVMBinaryFormat-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-earlycse" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-compactbranches" />
      <config projectName="Project" targetName="install-LLVMObjectYAML-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-arm" />
      <config projectName="Project" targetName="install-LLVMMSP430Info" />
      <config projectName="Project" targetName="check-llvm-codegen-hexagon-autohvx" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-broadwell" />
      <config projectName="Project" targetName="check-llvm-assembler" />
      <config projectName="Project" targetName="LLVMHexagonDesc" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-arm" />
      <config projectName="Project" targetName="install-llvm-rtdyld-stripped" />
      <config projectName="Project" targetName="LLVMARMInfo" />
      <config projectName="Project" targetName="install-LLVMTransformUtils-stripped" />
      <config projectName="Project" targetName="llvm-ar" />
      <config projectName="Project" targetName="MITests" />
      <config projectName="Project" targetName="install-LLVMBPFDesc-stripped" />
      <config projectName="Project" targetName="dsymutil" />
      <config projectName="Project" targetName="check-llvm-transforms-interleavedaccess-aarch64" />
      <config projectName="Project" targetName="check-llvm-transforms-indvarsimplify-amdgpu" />
      <config projectName="Project" targetName="install-verify-uselistorder" />
      <config projectName="Project" targetName="check-llvm-bindings-llvm-c" />
      <config projectName="Project" targetName="check-llvm-debuginfo-sparc" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips1" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips2" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce-arm" />
      <config projectName="Project" targetName="llvm-stress" />
      <config projectName="Project" targetName="install-LLVMInterpreter-stripped" />
      <config projectName="Project" targetName="ocaml_all" />
      <config projectName="Project" targetName="check-llvm-transforms-coroutines" />
      <config projectName="Project" targetName="check-llvm-mc-asmparser-include" />
      <config projectName="Project" targetName="install-llvm-split-stripped" />
      <config projectName="Project" targetName="check-llvm-mc" />
      <config projectName="Project" targetName="install-LLVMAArch64Info" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-powerpc" />
      <config projectName="Project" targetName="check-llvm-codegen-lanai" />
      <config projectName="Project" targetName="install-LLVMX86AsmParser" />
      <config projectName="Project" targetName="install-LLVMSparcDesc" />
      <config projectName="Project" targetName="check-llvm-transforms-earlycse-aarch64" />
      <config projectName="Project" targetName="SupportTests" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-intrinsics" />
      <config projectName="Project" targetName="check-llvm-codegen-nvptx" />
      <config projectName="Project" targetName="check-llvm-analysis-dominancefrontier" />
      <config projectName="Project" targetName="check-llvm-transforms-preiselintrinsiclowering" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel-amdgpu" />
      <config projectName="Project" targetName="check-llvm-mc-powerpc" />
      <config projectName="Project" targetName="install-LLVMPowerPCDisassembler" />
      <config projectName="Project" targetName="check-llvm-analysis-constantfolding" />
      <config projectName="Project" targetName="install-LLVMNVPTXDesc" />
      <config projectName="Project" targetName="install-llvm-cov-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-readobj" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare-x86" />
      <config projectName="Project" targetName="install-LLVMVectorize-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-amdgpu" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-powerpc" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-x86" />
      <config projectName="Project" targetName="check-llvm-jitlistener" />
      <config projectName="Project" targetName="install-LLVMLanaiDesc" />
      <config projectName="Project" targetName="check-llvm-debuginfo" />
      <config projectName="Project" targetName="check-llvm-tools-dsymutil-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-util-memoryssa" />
      <config projectName="Project" targetName="install-LLVMMSP430Desc" />
      <config projectName="Project" targetName="install-llvm-as" />
      <config projectName="Project" targetName="install-llvm-ar" />
      <config projectName="Project" targetName="install-LLVMBitWriter" />
      <config projectName="Project" targetName="LLVMSystemZAsmParser" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-rc" />
      <config projectName="Project" targetName="check-llvm-mc-asmparser-aarch64" />
      <config projectName="Project" targetName="install-LLVMCoverage-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-integration" />
      <config projectName="Project" targetName="install-LLVMProfileData-stripped" />
      <config projectName="Project" targetName="install-LLVMMipsDesc" />
      <config projectName="Project" targetName="llvm-config" />
      <config projectName="Project" targetName="check-llvm-object-arm" />
      <config projectName="Project" targetName="install-llvm-rc" />
      <config projectName="Project" targetName="install-LLVMTarget" />
      <config projectName="Project" targetName="install-LLVMARMAsmParser-stripped" />
      <config projectName="Project" targetName="LLVMX86Desc" />
      <config projectName="Project" targetName="count" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-strings" />
      <config projectName="Project" targetName="check-llvm-examples" />
      <config projectName="Project" targetName="install-sancov" />
      <config projectName="Project" targetName="install-llvm-lto-stripped" />
      <config projectName="Project" targetName="llvm-isel-fuzzer" />
      <config projectName="Project" targetName="gtest_main" />
      <config projectName="Project" targetName="install-llvm-dwarfdump" />
      <config projectName="Project" targetName="check-llvm-transforms-taildup" />
      <config projectName="Project" targetName="LLVMARMAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-instrumentation-addresssanitizer-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-constanthoisting-powerpc" />
      <config projectName="Project" targetName="check-llvm-transforms-straightlinestrengthreduce-amdgpu" />
      <config projectName="Project" targetName="check-llvm-transforms-separateconstoffsetfromgep-nvptx" />
      <config projectName="Project" targetName="PowerPCCommonTableGen" />
      <config projectName="Project" targetName="check-llvm-transforms-loopinstsimplify" />
      <config projectName="Project" targetName="install-LLVMOption-stripped" />
      <config projectName="Project" targetName="install-llvm-xray" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-micromips-sizereduction" />
      <config projectName="Project" targetName="llvm-extract" />
      <config projectName="Project" targetName="install-LLVMARMDisassembler" />
      <config projectName="Project" targetName="LLVMHexagonCodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine" />
      <config projectName="Project" targetName="llvm_vcsrevision_h" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips16" />
      <config projectName="Project" targetName="check-llvm-transforms-constanthoisting-aarch64" />
      <config projectName="Project" targetName="install-llvm-c-test" />
      <config projectName="Project" targetName="check-llvm-debuginfo-x86" />
      <config projectName="Project" targetName="check-llvm-mc-mips-micromips-dsp" />
      <config projectName="Project" targetName="LinkerTests" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips32r6" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-globalisel-instruction-select" />
      <config projectName="Project" targetName="check-llvm-codegen-webassembly" />
      <config projectName="Project" targetName="install-LLVMHexagonCodeGen-stripped" />
      <config projectName="Project" targetName="install-llvm-opt-report" />
      <config projectName="Project" targetName="check-llvm-analysis-scalarevolution" />
      <config projectName="Project" targetName="install-LLVMAArch64Disassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopsimplify" />
      <config projectName="Project" targetName="install-LLVMObject-stripped" />
      <config projectName="Project" targetName="install-LLVMAMDGPUAsmPrinter-stripped" />
      <config projectName="Project" targetName="install-LLVMCoverage" />
      <config projectName="Project" targetName="check-llvm-bindings-ocaml" />
      <config projectName="Project" targetName="install-llvm-readelf" />
      <config projectName="Project" targetName="install-yaml2obj" />
      <config projectName="Project" targetName="LLVMExegesisARMTests" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-webassembly" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mt" />
      <config projectName="Project" targetName="install-llvm-strings-stripped" />
      <config projectName="Project" targetName="install-LLVMAMDGPUDesc" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-nm" />
      <config projectName="Project" targetName="install-LLVMLanaiDisassembler" />
      <config projectName="Project" targetName="install-LLVMSparcAsmPrinter-stripped" />
      <config projectName="Project" targetName="VectorizeTests" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-lowerinvoke" />
      <config projectName="Project" targetName="install-LLVMWindowsManifest" />
      <config projectName="Project" targetName="check-llvm-transforms-atomicexpand-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-inferaddressspaces-amdgpu" />
      <config projectName="Project" targetName="LLVMExegesis" />
      <config projectName="Project" targetName="install-llvm-bcanalyzer-stripped" />
      <config projectName="Project" targetName="install-llvm-lto2-stripped" />
      <config projectName="Project" targetName="LLVMTestingSupport" />
      <config projectName="Project" targetName="install-LLVMCodeGen-stripped" />
      <config projectName="Project" targetName="install-LLVMHexagonDisassembler-stripped" />
      <config projectName="Project" targetName="install-LLVMBPFAsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-dce" />
      <config projectName="Project" targetName="llvm-headers" />
      <config projectName="Project" targetName="LLVMLanaiInfo" />
      <config projectName="Project" targetName="install-llvm-objdump-stripped" />
      <config projectName="Project" targetName="install-LLVMSparcAsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mc" />
      <config projectName="Project" targetName="install-llvm-dwp" />
      <config projectName="Project" targetName="check-llvm-codegen-mir" />
      <config projectName="Project" targetName="check-llvm-mc-arm-windows" />
      <config projectName="Project" targetName="LLVMCoverage" />
      <config projectName="Project" targetName="install-llvm-mt-stripped" />
      <config projectName="Project" targetName="install-LLVMMipsDesc-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine-x86" />
      <config projectName="Project" targetName="LLVMDebugInfoPDB" />
      <config projectName="Project" targetName="check-llvm-codegen-bpf" />
      <config projectName="Project" targetName="LLVMAArch64Utils" />
      <config projectName="Project" targetName="LLVMRuntimeDyld" />
      <config projectName="Project" targetName="install-LLVMMipsCodeGen" />
      <config projectName="Project" targetName="LLVMSparcAsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-atomicexpandloadlinked-arm" />
      <config projectName="Project" targetName="install-llvm-cov" />
      <config projectName="Project" targetName="check-llvm-transforms-loadstorevectorizer-x86" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-aarch64" />
      <config projectName="Project" targetName="llvm-readobj" />
      <config projectName="Project" targetName="check-llvm-transforms-util" />
      <config projectName="Project" targetName="LTO" />
      <config projectName="Project" targetName="install-llvm-undname-stripped" />
      <config projectName="Project" targetName="install-LLVMBPFDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-amdgpu-globalisel" />
      <config projectName="Project" targetName="install-LLVMXCoreInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-aarch64" />
      <config projectName="Project" targetName="install-llvm-undname" />
      <config projectName="Project" targetName="install-LLVMTransformUtils" />
      <config projectName="Project" targetName="check-llvm-codegen" />
      <config projectName="Project" targetName="check-llvm-transforms-gvnhoist" />
      <config projectName="Project" targetName="check-llvm-transforms-indirectbrexpand" />
      <config projectName="Project" targetName="check-llvm-codegen-wineh" />
      <config projectName="Project" targetName="install-LLVMX86AsmPrinter" />
      <config projectName="Project" targetName="install-LLVMSystemZAsmParser-stripped" />
      <config projectName="Project" targetName="install-LLVMXCoreDesc" />
      <config projectName="Project" targetName="llvm-dlltool" />
      <config projectName="Project" targetName="intrinsics_gen" />
      <config projectName="Project" targetName="install-llvm-ranlib-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine-aarch64" />
      <config projectName="Project" targetName="install-LLVMAArch64Utils" />
      <config projectName="Project" targetName="check-llvm-transforms-loopversioninglicm" />
      <config projectName="Project" targetName="check-llvm-transforms-simpleloopunswitch" />
      <config projectName="Project" targetName="check-llvm-analysis-dominators" />
      <config projectName="Project" targetName="install-LLVMMCDisassembler" />
      <config projectName="Project" targetName="check-llvm-lto-resolution" />
      <config projectName="Project" targetName="llvm-strings" />
      <config projectName="Project" targetName="Kaleidoscope" />
      <config projectName="Project" targetName="check-llvm-tablegen" />
      <config projectName="Project" targetName="check-llvm-debuginfo-msp430" />
      <config projectName="Project" targetName="install-llvm-link" />
      <config projectName="Project" targetName="check-llvm-transforms-gvnsink" />
      <config projectName="Project" targetName="LLVMSystemZDesc" />
      <config projectName="Project" targetName="install-LLVMVectorize" />
      <config projectName="Project" targetName="install-LLVMAMDGPUInfo-stripped" />
      <config projectName="Project" targetName="install-LLVMLanaiInfo" />
      <config projectName="Project" targetName="install-LLVMLineEditor" />
      <config projectName="Project" targetName="Vanir" />
      <config projectName="Project" targetName="check-llvm-executionengine-mcjit" />
      <config projectName="Project" targetName="DebugInfoCodeViewTests" />
      <config projectName="Project" targetName="check-llvm-transforms-loopdeletion" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine-amdgpu" />
      <config projectName="Project" targetName="check-llvm-mc-mips-virt" />
      <config projectName="Project" targetName="llvm-split" />
      <config projectName="Project" targetName="install-llvm-cxxdump-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce-nvptx" />
      <config projectName="Project" targetName="check-llvm-transforms-adce" />
      <config projectName="Project" targetName="check-llvm-transforms-newgvn" />
      <config projectName="Project" targetName="install-LLVMXCoreDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-globalisel-regbankselect" />
      <config projectName="Project" targetName="check-llvm-filecheck" />
      <config projectName="Project" targetName="check-llvm-instrumentation-hwaddresssanitizer" />
      <config projectName="Project" targetName="install-LLVMIRReader-stripped" />
      <config projectName="Project" targetName="check-llvm-analysis-cflaliasanalysis" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-calling-conv-c" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dwarfdump-arm" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-instrumentation" />
      <config projectName="Project" targetName="LLVMWindowsManifest" />
      <config projectName="Project" targetName="check-llvm-codegen-powerpc" />
      <config projectName="Project" targetName="LLVMX86CodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-lowerswitch" />
      <config projectName="Project" targetName="install-LLVMMipsDisassembler-stripped" />
      <config projectName="Project" targetName="install-llvm-mca" />
      <config projectName="Project" targetName="check-llvm-transforms-loadstorevectorizer-amdgpu" />
      <config projectName="Project" targetName="llvm-dwp" />
      <config projectName="Project" targetName="check-llvm-analysis-memoryssa" />
      <config projectName="Project" targetName="check-llvm-transforms-phaseordering" />
      <config projectName="Project" targetName="check-llvm-codegen-aarch64" />
      <config projectName="Project" targetName="ObjectTests" />
      <config projectName="Project" targetName="ObjectYAMLTests" />
      <config projectName="Project" targetName="install-LLVMSystemZCodeGen" />
      <config projectName="Project" targetName="install-lli-stripped" />
      <config projectName="Project" targetName="install-LLVMAMDGPUAsmParser" />
      <config projectName="Project" targetName="LLVMMipsAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-atom" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-fast-isel" />
      <config projectName="Project" targetName="LLVMFuzzMutate" />
      <config projectName="Project" targetName="install-LLVMAnalysis-stripped" />
      <config projectName="Project" targetName="LLVMExegesisAArch64" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-nm-x86-radix" />
      <config projectName="Project" targetName="check-llvm-debuginfo-mir-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-blockextractor" />
      <config projectName="Project" targetName="check-llvm-codegen-avr" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mt" />
      <config projectName="Project" targetName="check-llvm-transforms-eliminateavailableexternally" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare-nvptx" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-generic" />
      <config projectName="Project" targetName="LLVMMC" />
      <config projectName="Project" targetName="MCJITTests" />
      <config projectName="Project" targetName="install-LLVMARMUtils-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips64" />
      <config projectName="Project" targetName="install-LLVMAArch64AsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-ipconstantprop" />
      <config projectName="Project" targetName="install-LLVMBitReader-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-divrempairs-powerpc" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mt" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-features" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-x86" />
      <config projectName="Project" targetName="install-LLVMRuntimeDyld" />
      <config projectName="Project" targetName="install-llvm-modextract-stripped" />
      <config projectName="Project" targetName="install-llvm-dwp-stripped" />
      <config projectName="Project" targetName="check-llvm-analysis-typebasedaliasanalysis" />
      <config projectName="Project" targetName="check-llvm-tools-gold-powerpc" />
      <config projectName="Project" targetName="check-llvm-codegen-x86-avx512-shuffles" />
      <config projectName="Project" targetName="check-llvm-transforms-constanthoisting-arm" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips" />
      <config projectName="Project" targetName="install-LLVMPowerPCCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-pseudo" />
      <config projectName="Project" targetName="check-llvm-transforms-speculativeexecution" />
      <config projectName="Project" targetName="check-llvm-mc-aarch64-sve-disassembler_tests" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-atomics" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-aarch64" />
      <config projectName="Project" targetName="check-llvm-thinlto" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-lanai" />
      <config projectName="Project" targetName="check-llvm-transforms-looppredication" />
      <config projectName="Project" targetName="check-llvm-transforms-structurizecfg" />
      <config projectName="Project" targetName="LLVMLTO" />
      <config projectName="Project" targetName="install-LLVMBPFDisassembler" />
      <config projectName="Project" targetName="install-LLVMAsmPrinter-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-sanstats" />
      <config projectName="Project" targetName="check-llvm-transforms-inline-aarch64" />
      <config projectName="Project" targetName="install-llvm-opt-report-stripped" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel-systemz" />
      <config projectName="Project" targetName="LLVMXCoreCodeGen" />
      <config projectName="Project" targetName="GlobalISelTests" />
      <config projectName="Project" targetName="LLVMScalarOpts" />
      <config projectName="Project" targetName="IRTests" />
      <config projectName="Project" targetName="check-llvm-analysis-profilesummary" />
      <config projectName="Project" targetName="check-llvm-transforms-inferaddressspaces" />
      <config projectName="Project" targetName="LLVMXCoreInfo" />
      <config projectName="Project" targetName="obj.llvm-tblgen" />
      <config projectName="Project" targetName="LLVMCodeGen" />
      <config projectName="Project" targetName="LLVMMSP430AsmPrinter" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-hexagon" />
      <config projectName="Project" targetName="DebugInfoDWARFTests" />
      <config projectName="Project" targetName="install-verify-uselistorder-stripped" />
      <config projectName="Project" targetName="install-LLVMHexagonInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cxxfilt" />
      <config projectName="Project" targetName="LLVMExegesisAArch64Tests" />
      <config projectName="Project" targetName="check-llvm-transforms-loopversioning" />
      <config projectName="Project" targetName="CvtResTableGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cfi-verify-x86" />
      <config projectName="Project" targetName="check-llvm-codegen-arm" />
      <config projectName="Project" targetName="install-LLVMAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-btver2" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-amdgpu" />
      <config projectName="Project" targetName="install-sanstats" />
      <config projectName="Project" targetName="llvm-mca" />
      <config projectName="Project" targetName="check" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-ar" />
      <config projectName="Project" targetName="install-LLVMSparcAsmPrinter" />
      <config projectName="Project" targetName="install-opt-stripped" />
      <config projectName="Project" targetName="install-llvm-ranlib" />
      <config projectName="Project" targetName="LLVMARMDesc" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips32" />
      <config projectName="Project" targetName="install-LLVMMCJIT-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-bdce" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-nm-arm" />
      <config projectName="Project" targetName="LLVMExegesisTests" />
      <config projectName="Project" targetName="check-llvm-transforms-pgoprofile" />
      <config projectName="Project" targetName="install-LLVMPowerPCAsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-xcore" />
      <config projectName="Project" targetName="install-cmake-exports-stripped" />
      <config projectName="Project" targetName="install-LLVMObjCARCOpts" />
      <config projectName="Project" targetName="check-llvm-debuginfo-lanai" />
      <config projectName="Project" targetName="install-LLVMMipsAsmPrinter-stripped" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld-powerpc" />
      <config projectName="Project" targetName="check-llvm-mc-mips-crc" />
      <config projectName="Project" targetName="check-llvm-instrumentation-dataflowsanitizer" />
      <config projectName="Project" targetName="HowToUseJIT" />
      <config projectName="Project" targetName="check-llvm-mc-sparc" />
      <config projectName="Project" targetName="install-llvm-profdata" />
      <config projectName="Project" targetName="install-LLVMSparcDisassembler-stripped" />
      <config projectName="Project" targetName="DynamicLibraryLib" />
      <config projectName="Project" targetName="LLVMBPFInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-crossdsocfi" />
      <config projectName="Project" targetName="check-llvm-debuginfo-nvptx" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunrollandjam" />
      <config projectName="Project" targetName="LLVMAArch64Desc" />
      <config projectName="Project" targetName="check-llvm-transforms-branchfolding" />
      <config projectName="Project" targetName="check-llvm-lto" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips5" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips4" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips3" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips2" />
      <config projectName="Project" targetName="check-llvm-transforms-expandmemcmp" />
      <config projectName="Project" targetName="check-llvm-transforms-alignmentfromassumptions" />
      <config projectName="Project" targetName="install-LLVMBPFDesc" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-mips" />
      <config projectName="Project" targetName="MtTableGen" />
      <config projectName="Project" targetName="check-llvm-transforms-sccp" />
      <config projectName="Project" targetName="LLVMLinker" />
      <config projectName="Project" targetName="LLVMExegesisX86Tests" />
      <config projectName="Project" targetName="install-llvm-dis" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-systemz" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-lto2-x86" />
      <config projectName="Project" targetName="install-LLVMNVPTXInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-instrumentation-memorysanitizer-powerpc" />
      <config projectName="Project" targetName="LLVMXCoreDesc" />
      <config projectName="Project" targetName="check-llvm-analysis-postdominators" />
      <config projectName="Project" targetName="install-LLVMSystemZDesc" />
      <config projectName="Project" targetName="check-llvm-transforms-loadstorevectorizer-nvptx" />
      <config projectName="Project" targetName="ARMCommonTableGen" />
      <config projectName="Project" targetName="LLVMX86AsmPrinter" />
      <config projectName="Project" targetName="install-LLVMExecutionEngine" />
      <config projectName="Project" targetName="install-LLVMNVPTXDesc-stripped" />
      <config projectName="Project" targetName="AArch64Tests" />
      <config projectName="Project" targetName="install-llvm-mt" />
      <config projectName="Project" targetName="LineEditorTests" />
      <config projectName="Project" targetName="check-llvm-analysis-blockfrequencyinfo" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll-amdgpu" />
      <config projectName="Project" targetName="install-LLVMXCoreCodeGen-stripped" />
      <config projectName="Project" targetName="install-obj2yaml" />
      <config projectName="Project" targetName="check-llvm-instrumentation-memorysanitizer-aarch64" />
      <config projectName="Project" targetName="MCTests" />
      <config projectName="Project" targetName="install-llvm-config" />
      <config projectName="Project" targetName="check-llvm-mc-macho-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-mergeicmps" />
      <config projectName="Project" targetName="install-LLVMHexagonDisassembler" />
      <config projectName="Project" targetName="check-llvm-analysis" />
      <config projectName="Project" targetName="install-llvm-nm" />
      <config projectName="Project" targetName="install-llc-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-mergefunc" />
      <config projectName="Project" targetName="install-llvm-lto2" />
      <config projectName="Project" targetName="BinaryFormatTests" />
      <config projectName="Project" targetName="DebugInfoPDBTests" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-ginv" />
      <config projectName="Project" targetName="check-llvm-transforms-loopinterchange" />
      <config projectName="Project" targetName="LLVMPowerPCInfo" />
      <config projectName="Project" targetName="NVPTXCommonTableGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-amdgpu" />
      <config projectName="Project" targetName="FuzzMutateTests" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-x86" />
      <config projectName="Project" targetName="LLVMSystemZDisassembler" />
      <config projectName="Project" targetName="install-LLVMSystemZDesc-stripped" />
      <config projectName="Project" targetName="install-LLVMLanaiCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-instmerge" />
      <config projectName="Project" targetName="install-LLVMPowerPCInfo-stripped" />
      <config projectName="Project" targetName="install-LLVMHexagonAsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-scalarizer" />
      <config projectName="Project" targetName="LLVMPowerPCCodeGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-profdata" />
      <config projectName="Project" targetName="install-llvm-readobj-stripped" />
      <config projectName="Project" targetName="llvm-symbolizer" />
      <config projectName="Project" targetName="LLVMPasses" />
      <config projectName="Project" targetName="check-llvm-transforms-callsitesplitting" />
      <config projectName="Project" targetName="check-llvm-transforms-memcpyopt" />
      <config projectName="Project" targetName="sanstats" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips32r2" />
      <config projectName="Project" targetName="install-LLVMObjectYAML" />
      <config projectName="Project" targetName="install-LLVMCoroutines" />
      <config projectName="Project" targetName="check-llvm-mc-hexagon-packetrules" />
      <config projectName="Project" targetName="LLVMBPFCodeGen" />
      <config projectName="Project" targetName="LLVMSparcAsmPrinter" />
      <config projectName="Project" targetName="install-llvm-dis-stripped" />
      <config projectName="Project" targetName="install-LLVMPowerPCDesc" />
      <config projectName="Project" targetName="install-LLVMLanaiAsmPrinter" />
      <config projectName="Project" targetName="install-LLVMMSP430CodeGen" />
      <config projectName="Project" targetName="install-LLVMX86Info-stripped" />
      <config projectName="Project" targetName="install-llvm-headers" />
      <config projectName="Project" targetName="check-llvm-transforms-interleavedaccess-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-licm" />
      <config projectName="Project" targetName="install-LLVMX86Desc-stripped" />
      <config projectName="Project" targetName="LLVMInterpreter" />
      <config projectName="Project" targetName="install-llvm-cfi-verify-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-globalisel-irtranslator" />
      <config projectName="Project" targetName="PluginsTests" />
      <config projectName="Project" targetName="llvm-as" />
      <config projectName="Project" targetName="Kaleidoscope-Ch9" />
      <config projectName="Project" targetName="Kaleidoscope-Ch8" />
      <config projectName="Project" targetName="Kaleidoscope-Ch7" />
      <config projectName="Project" targetName="Kaleidoscope-Ch6" />
      <config projectName="Project" targetName="LLVMBitReader" />
      <config projectName="Project" targetName="check-llvm-transforms-bbvectorize-xcore" />
      <config projectName="Project" targetName="install-LLVMBPFAsmParser" />
      <config projectName="Project" targetName="Kaleidoscope-Ch2" />
      <config projectName="Project" targetName="check-llvm-transforms-scalarrepl" />
      <config projectName="Project" targetName="install-llvm-lto" />
      <config projectName="Project" targetName="OrcJITTests" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-eva" />
      <config projectName="Project" targetName="install-LLVMAArch64AsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-yaml2obj" />
      <config projectName="Project" targetName="install-llvm-rc-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-config" />
      <config projectName="Project" targetName="llvm-dis" />
      <config projectName="Project" targetName="check-llvm-instrumentation-threadsanitizer" />
      <config projectName="Project" targetName="BrainF" />
      <config projectName="Project" targetName="check-llvm-transforms-loopdataprefetch-powerpc" />
      <config projectName="Project" targetName="install-LLVMXCoreAsmPrinter-stripped" />
      <config projectName="Project" targetName="install-LLVMSymbolize" />
      <config projectName="Project" targetName="LLVMAArch64AsmParser" />
      <config projectName="Project" targetName="check-llvm-object-aarch64" />
      <config projectName="Project" targetName="check-llvm-codegen-nios2" />
      <config projectName="Project" targetName="install-LLVMipo-stripped" />
      <config projectName="Project" targetName="check-llvm-executionengine-interpreter" />
      <config projectName="Project" targetName="X86CommonTableGen" />
      <config projectName="Project" targetName="check-llvm-bindings-llvm-c-x86" />
      <config projectName="Project" targetName="check-llvm-instrumentation-sanitizercoverage" />
      <config projectName="Project" targetName="install-LLVMMSP430CodeGen-stripped" />
      <config projectName="Project" targetName="LLVMExecutionEngine" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-mips" />
      <config projectName="Project" targetName="install-LLVMSystemZAsmPrinter" />
      <config projectName="Project" targetName="prepare-check-lit" />
      <config projectName="Project" targetName="install-llvm-cfi-verify" />
      <config projectName="Project" targetName="install-LLVMIRReader" />
      <config projectName="Project" targetName="check-llvm-codegen-generic" />
      <config projectName="Project" targetName="install-LTO" />
      <config projectName="Project" targetName="check-llvm-transforms-loopsimplifycfg" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel-x86" />
      <config projectName="Project" targetName="LLVMAggressiveInstCombine" />
      <config projectName="Project" targetName="llvm-exegesis" />
      <config projectName="Project" targetName="install-LLVMTableGen-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-relax-mem" />
      <config projectName="Project" targetName="check-llvm-transforms-loadcombine" />
      <config projectName="Project" targetName="check-llvm-mc-x86" />
      <config projectName="Project" targetName="install-llvm-extract-stripped" />
      <config projectName="Project" targetName="llvm-size" />
      <config projectName="Project" targetName="llvm-objdump" />
      <config projectName="Project" targetName="check-llvm-transforms" />
      <config projectName="Project" targetName="check-llvm-transforms-internalize" />
      <config projectName="Project" targetName="llvm-undname" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-webassembly" />
      <config projectName="Project" targetName="install-LLVMXRay-stripped" />
      <config projectName="Project" targetName="install-LLVMSystemZInfo-stripped" />
      <config projectName="Project" targetName="LLVMMSP430Desc" />
      <config projectName="Project" targetName="check-llvm-transforms-globalopt-powerpc" />
      <config projectName="Project" targetName="install-LLVMCore-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll-arm" />
      <config projectName="Project" targetName="install-LLVMMCParser-stripped" />
      <config projectName="Project" targetName="install-LLVMMSP430AsmPrinter-stripped" />
      <config projectName="Project" targetName="check-llvm-verifier" />
      <config projectName="Project" targetName="LLVMMipsAsmParser" />
      <config projectName="Project" targetName="install-LLVMBitReader" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-aarch64" />
      <config projectName="Project" targetName="check-llvm-transforms-adddiscriminators" />
      <config projectName="Project" targetName="check-llvm-debuginfo-mir" />
      <config projectName="Project" targetName="install-LLVMGlobalISel" />
      <config projectName="Project" targetName="install-LLVMDebugInfoPDB-stripped" />
      <config projectName="Project" targetName="install-LLVMSparcCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-nameanonfunctions" />
      <config projectName="Project" targetName="LLVMLanaiAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-mc-mips-micromips-dspr2" />
      <config projectName="Project" targetName="check-llvm" />
      <config projectName="Project" targetName="check-llvm-debuginfo-pdb" />
      <config projectName="Project" targetName="LLVMNVPTXDesc" />
      <config projectName="Project" targetName="llvm-strip" />
      <config projectName="Project" targetName="check-llvm-other" />
      <config projectName="Project" targetName="LLVMVectorize" />
      <config projectName="Project" targetName="install-LLVMHexagonDesc" />
      <config projectName="Project" targetName="check-llvm-transforms-countingfunctioninserter" />
      <config projectName="Project" targetName="LLVMPowerPCAsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-codeextractor-x86" />
      <config projectName="Project" targetName="install-llvm-bcanalyzer" />
      <config projectName="Project" targetName="ProfileDataTests" />
      <config projectName="Project" targetName="check-llvm-transforms-pruneeh" />
      <config projectName="Project" targetName="llvm-lto" />
      <config projectName="Project" targetName="install-LLVMPasses" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel-powerpc" />
      <config projectName="Project" targetName="LLVMDemangle" />
      <config projectName="Project" targetName="check-llvm-debuginfo-amdgpu" />
      <config projectName="Project" targetName="LLVMProfileData" />
      <config projectName="Project" targetName="LLVMDebugInfoCodeView" />
      <config projectName="Project" targetName="check-llvm-transforms-lcssa" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-xcore" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips64r6" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips64r5" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips64r3" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips64r2" />
      <config projectName="Project" targetName="install-LLVMSupport" />
      <config projectName="Project" targetName="LLVMHexagonInfo" />
      <config projectName="Project" targetName="LLVMInstCombine" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel-aarch64" />
      <config projectName="Project" targetName="install-LLVMARMCodeGen" />
      <config projectName="Project" targetName="install-LLVMAMDGPUCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dwp" />
      <config projectName="Project" targetName="install-LLVMARMDesc" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-inline-asm" />
      <config projectName="Project" targetName="install-LLVMARMUtils" />
      <config projectName="Project" targetName="LLVMExegesisX86" />
      <config projectName="Project" targetName="check-llvm-unit" />
      <config projectName="Project" targetName="check-llvm-mc-asmparser" />
      <config projectName="Project" targetName="install-LLVMARMInfo" />
      <config projectName="Project" targetName="check-llvm-objectyaml-codeview" />
      <config projectName="Project" targetName="SystemZCommonTableGen" />
      <config projectName="Project" targetName="install-LLVMBPFCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-divrempairs" />
      <config projectName="Project" targetName="install-LLVMipo" />
      <config projectName="Project" targetName="llvm-modextract" />
      <config projectName="Project" targetName="LLVMAMDGPUDisassembler" />
      <config projectName="Project" targetName="gtest" />
      <config projectName="Project" targetName="check-llvm-transforms-sampleprofile" />
      <config projectName="Project" targetName="install-llvm-stress" />
      <config projectName="Project" targetName="check-llvm-transforms-mergeicmps-x86" />
      <config projectName="Project" targetName="LLVMAArch64Disassembler" />
      <config projectName="Project" targetName="install-LLVMSparcInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-guardwidening" />
      <config projectName="Project" targetName="LLVMMipsCodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-structurizecfg-amdgpu" />
      <config projectName="Project" targetName="check-llvm-executionengine-orcmcjit-remote" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-arc" />
      <config projectName="Project" targetName="install-LLVMMCParser" />
      <config projectName="Project" targetName="Fibonacci" />
      <config projectName="Project" targetName="TestPlugin" />
      <config projectName="Project" targetName="LLVMAMDGPUCodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine-powerpc" />
      <config projectName="Project" targetName="install-LLVMSelectionDAG-stripped" />
      <config projectName="Project" targetName="llvm-bcanalyzer" />
      <config projectName="Project" targetName="AnalysisTests" />
      <config projectName="Project" targetName="check-llvm-transforms-loopidiom-x86" />
      <config projectName="Project" targetName="install-LLVMObject" />
      <config projectName="Project" targetName="install-LLVMExecutionEngine-stripped" />
      <config projectName="Project" targetName="check-llvm-analysis-lazycallgraph" />
      <config projectName="Project" targetName="check-llvm-transforms-taildup-x86" />
      <config projectName="Project" targetName="check-llvm-mc-elf" />
      <config projectName="Project" targetName="OptsTestTableGen" />
      <config projectName="Project" targetName="check-llvm-mc-amdgpu-regression" />
      <config projectName="Project" targetName="install-LLVMMipsDisassembler" />
      <config projectName="Project" targetName="check-llvm-transforms-atomicexpandloadlinked" />
      <config projectName="Project" targetName="check-llvm-transforms-straightlinestrengthreduce-x86" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips32r6" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips32r5" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips32r3" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips32r2" />
      <config projectName="Project" targetName="check-llvm-codegen-hexagon-intrinsics" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips64r5" />
      <config projectName="Project" targetName="install-llvm-strip-stripped" />
      <config projectName="Project" targetName="LLVMXCoreAsmPrinter" />
      <config projectName="Project" targetName="install-LLVMSelectionDAG" />
      <config projectName="Project" targetName="ADTTests" />
      <config projectName="Project" targetName="check-llvm-codegen-riscv" />
      <config projectName="Project" targetName="install-LLVMARMCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-linker" />
      <config projectName="Project" targetName="AMDGPUCommonTableGen" />
      <config projectName="Project" targetName="install-LLVMDlltoolDriver-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-xcore" />
      <config projectName="Project" targetName="install-LLVMInstCombine-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-indvarsimplify" />
      <config projectName="Project" targetName="check-llvm-transforms-mem2reg" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cfi-verify-aarch64" />
      <config projectName="Project" targetName="LLVMX86Info" />
      <config projectName="Project" targetName="check-llvm-analysis-branchprobabilityinfo" />
      <config projectName="Project" targetName="install-llvm-lib" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunswitch-amdgpu" />
      <config projectName="Project" targetName="check-llvm-debuginfo-mips" />
      <config projectName="Project" targetName="check-llvm-transforms-inferfunctionattrs" />
      <config projectName="Project" targetName="check-llvm-analysis-aliasset" />
      <config projectName="Project" targetName="install-LLVMX86Desc" />
      <config projectName="Project" targetName="install-llvm-pdbutil-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-elf-arm" />
      <config projectName="Project" targetName="check-llvm-analysis-cflaliasanalysis-steensgaard" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-hexagon" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-arm" />
      <config projectName="Project" targetName="check-llvm-objectyaml" />
      <config projectName="Project" targetName="check-llvm-mc-riscv" />
      <config projectName="Project" targetName="install-llvm-objcopy-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-mips64r6" />
      <config projectName="Project" targetName="XCoreCommonTableGen" />
      <config projectName="Project" targetName="install-llvm-cxxdump" />
      <config projectName="Project" targetName="check-llvm-tools-dsymutil-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-powerpc" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce-aarch64" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca" />
      <config projectName="Project" targetName="opt" />
      <config projectName="Project" targetName="check-llvm-mc-mips-micromips-dspr3" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-slm" />
      <config projectName="Project" targetName="LLVMOrcJIT" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld-x86" />
      <config projectName="Project" targetName="install-llvm-dlltool-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-correlatedvaluepropagation" />
      <config projectName="Project" targetName="check-llvm-lto-resolution-x86" />
      <config projectName="Project" targetName="install-LLVMBPFAsmPrinter-stripped" />
      <config projectName="Project" targetName="llvm-special-case-list-fuzzer" />
      <config projectName="Project" targetName="XRayTests" />
      <config projectName="Project" targetName="check-llvm-transforms-separateconstoffsetfromgep" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-aarch64" />
      <config projectName="Project" targetName="check-llvm-instrumentation-memorysanitizer-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-lowerbitsets" />
      <config projectName="Project" targetName="test-depends" />
      <config projectName="Project" targetName="CFIVerifyTests" />
      <config projectName="Project" targetName="check-llvm-mc-lanai" />
      <config projectName="Project" targetName="install-llvm-exegesis-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine-nvptx" />
      <config projectName="Project" targetName="ObjcopyOptsTableGen" />
      <config projectName="Project" targetName="install-LLVMX86AsmPrinter-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-haswell" />
      <config projectName="Project" targetName="install-LLVMAMDGPUInfo" />
      <config projectName="Project" targetName="check-llvm-object-riscv" />
      <config projectName="Project" targetName="check-llvm-object-lanai" />
      <config projectName="Project" targetName="install-LLVMPowerPCAsmPrinter" />
      <config projectName="Project" targetName="install-LLVMBPFAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-hexagon" />
      <config projectName="Project" targetName="LLVMX86AsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-naryreassociate-nvptx" />
      <config projectName="Project" targetName="bugpoint" />
      <config projectName="Project" targetName="install-LLVMSystemZCodeGen-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-x86-globalisel" />
      <config projectName="Project" targetName="install-llvm-cvtres" />
      <config projectName="Project" targetName="install-LLVMHexagonDesc-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-inline-powerpc" />
      <config projectName="Project" targetName="check-llvm-transforms-inline" />
      <config projectName="Project" targetName="check-llvm-debuginfo-arm" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-virt" />
      <config projectName="Project" targetName="check-llvm-mc-coff-arm" />
      <config projectName="Project" targetName="check-llvm-debuginfo-pdb-dia" />
      <config projectName="Project" targetName="install-llvm-xray-stripped" />
      <config projectName="Project" targetName="install-LLVMAArch64Utils-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-mips-eva" />
      <config projectName="Project" targetName="check-llvm-transforms-loadstorevectorizer" />
      <config projectName="Project" targetName="check-llvm-instrumentation" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-sparc" />
      <config projectName="Project" targetName="LLVMMSP430CodeGen" />
      <config projectName="Project" targetName="check-llvm-debuginfo-pdb-native" />
      <config projectName="Project" targetName="check-llvm-objectyaml-coff" />
      <config projectName="Project" targetName="llvm-rc" />
      <config projectName="Project" targetName="install-LLVMInstrumentation-stripped" />
      <config projectName="Project" targetName="check-llvm-instrumentation-memorysanitizer-mips" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-symbolizer" />
      <config projectName="Project" targetName="install-llvm-link-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips3" />
      <config projectName="Project" targetName="install-bugpoint" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare-mips" />
      <config projectName="Project" targetName="check-llvm-codegen-amdgpu" />
      <config projectName="Project" targetName="check-llvm-transforms-straightlinestrengthreduce" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-globalisel" />
      <config projectName="Project" targetName="check-llvm-codegen-arm-windows" />
      <config projectName="Project" targetName="LLVMMipsDesc" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-deadargelim" />
      <config projectName="Project" targetName="SparcCommonTableGen" />
      <config projectName="Project" targetName="check-llvm-transforms-atomicexpand-arm" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-arm" />
      <config projectName="Project" targetName="llvm-objcopy" />
      <config projectName="Project" targetName="llvm-lib" />
      <config projectName="Project" targetName="check-llvm-transforms-aggressiveinstcombine" />
      <config projectName="Project" targetName="check-llvm-transforms-constantmerge" />
      <config projectName="Project" targetName="LLVMMCDisassembler" />
      <config projectName="Project" targetName="check-llvm-executionengine" />
      <config projectName="Project" targetName="check-llvm-objectyaml-macho" />
      <config projectName="Project" targetName="check-llvm-tools" />
      <config projectName="Project" targetName="check-llvm-analysis-divergenceanalysis" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-systemz" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-systemz" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld" />
      <config projectName="Project" targetName="check-llvm-transforms-indvarsimplify-nvptx" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-aarch64-falkor" />
      <config projectName="Project" targetName="install-LLVMXCoreInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-globalopt" />
      <config projectName="Project" targetName="check-llvm-transforms-speculatearoundphis" />
      <config projectName="Project" targetName="install-LLVMDebugInfoDWARF" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-crc" />
      <config projectName="Project" targetName="llvm-readelf" />
      <config projectName="Project" targetName="install-LLVMDebugInfoMSF" />
      <config projectName="Project" targetName="check-llvm-mc-systemz" />
      <config projectName="Project" targetName="check-llvm-transforms-instcombine-arm" />
      <config projectName="Project" targetName="check-llvm-mc-x86-alignedbundling" />
      <config projectName="Project" targetName="check-llvm-analysis-demandedbits" />
      <config projectName="Project" targetName="check-llvm-tools-dsymutil" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-dspr2" />
      <config projectName="Project" targetName="install-LLVMDlltoolDriver" />
      <config projectName="Project" targetName="check-llvm-transforms-float2int" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld-systemz" />
      <config projectName="Project" targetName="install-LLVMTableGen" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-xcore" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-msa" />
      <config projectName="Project" targetName="LLVMSystemZInfo" />
      <config projectName="Project" targetName="install-LLVMARMDesc-stripped" />
      <config projectName="Project" targetName="LLVMARMUtils" />
      <config projectName="Project" targetName="install-LLVMSparcAsmParser" />
      <config projectName="Project" targetName="LLVMAMDGPUDesc" />
      <config projectName="Project" targetName="install-LLVMBinaryFormat" />
      <config projectName="Project" targetName="check-all" />
      <config projectName="Project" targetName="install-bugpoint-stripped" />
      <config projectName="Project" targetName="LLVMMCJIT" />
      <config projectName="Project" targetName="LLVMSystemZCodeGen" />
      <config projectName="Project" targetName="install-LLVMSparcInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce-amdgpu" />
      <config projectName="Project" targetName="check-llvm-debuginfo-systemz" />
      <config projectName="Project" targetName="Kaleidoscope-Ch3" />
      <config projectName="Project" targetName="install-sanstats-stripped" />
      <config projectName="Project" targetName="install-LLVMSparcDesc-stripped" />
      <config projectName="Project" targetName="install-LLVMOrcJIT-stripped" />
      <config projectName="Project" targetName="LLVMSparcDesc" />
      <config projectName="Project" targetName="llvm-opt-fuzzer" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-diff" />
      <config projectName="Project" targetName="check-llvm-transforms-inline-arm" />
      <config projectName="Project" targetName="AArch64CommonTableGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cfi-verify-unsupported" />
      <config projectName="Project" targetName="install-LLVMAggressiveInstCombine-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-partiallyinlinelibcalls" />
      <config projectName="Project" targetName="install-LLVMLTO-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cxxdump-x86" />
      <config projectName="Project" targetName="DebugInfoMSFTests" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll-x86" />
      <config projectName="Project" targetName="check-llvm-tools-gold-x86" />
      <config projectName="Project" targetName="install-llvm-diff" />
      <config projectName="Project" targetName="lli" />
      <config projectName="Project" targetName="LLVMMipsDisassembler" />
      <config projectName="Project" targetName="check-llvm-codegen-wincfguard" />
      <config projectName="Project" targetName="llc" />
      <config projectName="Project" targetName="check-llvm-feature-operandbundles" />
      <config projectName="Project" targetName="check-llvm-transforms-forcedfunctionattrs" />
      <config projectName="Project" targetName="check-llvm-analysis-mustexecute" />
      <config projectName="Project" targetName="check-llvm-transforms-gvn" />
      <config projectName="Project" targetName="install-llvm-profdata-stripped" />
      <config projectName="Project" targetName="install-LLVMSystemZDisassembler" />
      <config projectName="Project" targetName="check-llvm-transforms-inline-x86" />
      <config projectName="Project" targetName="ExecutionEngineTests" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-xray" />
      <config projectName="Project" targetName="install-LLVMAMDGPUCodeGen" />
      <config projectName="Project" targetName="install-LLVMMC" />
      <config projectName="Project" targetName="MipsCommonTableGen" />
      <config projectName="Project" targetName="check-llvm-transforms-stripdeadprototypes" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-x86" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-globalisel-legalizer" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-readobj-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-codeextractor" />
      <config projectName="Project" targetName="install-LLVMObjCARCOpts-stripped" />
      <config projectName="Project" targetName="install-LLVMAArch64CodeGen" />
      <config projectName="Project" targetName="LanaiCommonTableGen" />
      <config projectName="Project" targetName="check-llvm-codegen-thumb2" />
      <config projectName="Project" targetName="check-llvm-instrumentation-efficiencysanitizer" />
      <config projectName="Project" targetName="install-LLVMPowerPCDesc-stripped" />
      <config projectName="Project" targetName="install-llvm-dlltool" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce-powerpc" />
      <config projectName="Project" targetName="LLVMTarget" />
      <config projectName="Project" targetName="check-llvm-transforms-loopstrengthreduce-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-sroa" />
      <config projectName="Project" targetName="check-llvm-analysis-delinearization" />
      <config projectName="Project" targetName="check-llvm-safepointirverifier" />
      <config projectName="Project" targetName="install-llvm-size" />
      <config projectName="Project" targetName="install-LTO-stripped" />
      <config projectName="Project" targetName="llvm-rtdyld" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-nm-wasm" />
      <config projectName="Project" targetName="LLVMSparcInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-micromips-dsp" />
      <config projectName="Project" targetName="install-LLVMX86Disassembler-stripped" />
      <config projectName="Project" targetName="install-LLVMXCoreDisassembler" />
      <config projectName="Project" targetName="check-llvm-transforms-gcovprofiling" />
      <config projectName="Project" targetName="check-llvm-transforms-inline-amdgpu" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-sparc" />
      <config projectName="Project" targetName="LLVMLineEditor" />
      <config projectName="Project" targetName="install-LLVMOption" />
      <config projectName="Project" targetName="install-LLVMMipsCodeGen-stripped" />
      <config projectName="Project" targetName="HexagonCommonTableGen" />
      <config projectName="Project" targetName="BPFCommonTableGen" />
      <config projectName="Project" targetName="check-llvm-object" />
      <config projectName="Project" targetName="llvm-cov" />
      <config projectName="Project" targetName="install-llvm-cxxfilt-stripped" />
      <config projectName="Project" targetName="LLVMNVPTXAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-aarch64" />
      <config projectName="Project" targetName="install-llvm-split" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-arm" />
      <config projectName="Project" targetName="LLVMBPFAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-lto" />
      <config projectName="Project" targetName="check-llvm-object-amdgpu" />
      <config projectName="Project" targetName="check-llvm-tools-dsymutil-powerpc" />
      <config projectName="Project" targetName="check-llvm-tools-gold" />
      <config projectName="Project" targetName="install-LLVMARMInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-expandmemcmp-x86" />
      <config projectName="Project" targetName="install-LLVMCore" />
      <config projectName="Project" targetName="check-llvm-debuginfo-coff" />
      <config projectName="Project" targetName="install-llvm-extract" />
      <config projectName="Project" targetName="LLVMAMDGPUInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-lowerexpectintrinsic" />
      <config projectName="Project" targetName="install-LLVMAArch64Desc" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-amdgpu" />
      <config projectName="Project" targetName="LLVMX86Disassembler" />
      <config projectName="Project" targetName="install-LLVMCodeGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-split" />
      <config projectName="Project" targetName="check-llvm-transforms-loopdataprefetch-aarch64" />
      <config projectName="Project" targetName="install-LLVMAggressiveInstCombine" />
      <config projectName="Project" targetName="check-llvm-object-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-globalsplit" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-riscv" />
      <config projectName="Project" targetName="check-llvm-transforms-pgoprofile-x86" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-sandybridge" />
      <config projectName="Project" targetName="check-llvm-executionengine-runtimedyld-mips" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-cconv" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer" />
      <config projectName="Project" targetName="LLVMNVPTXInfo" />
      <config projectName="Project" targetName="llvm-tblgen" />
      <config projectName="Project" targetName="install-LLVMNVPTXCodeGen-stripped" />
      <config projectName="Project" targetName="LLVMAArch64Info" />
      <config projectName="Project" targetName="check-llvm-transforms-looploadelim" />
      <config projectName="Project" targetName="install-LLVMDebugInfoPDB" />
      <config projectName="Project" targetName="check-llvm-codegen-hexagon-vect" />
      <config projectName="Project" targetName="check-llvm-transforms-loweratomic" />
      <config projectName="Project" targetName="check-llvm-transforms-loopdistribute" />
      <config projectName="Project" targetName="install-LLVMBPFInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-deadstoreelimination" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll-hexagon" />
      <config projectName="Project" targetName="check-llvm-analysis-lazyvalueanalysis" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips32" />
      <config projectName="Project" targetName="lli-child-target" />
      <config projectName="Project" targetName="install-LLVMDebugInfoMSF-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-macho-powerpc" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dlltool" />
      <config projectName="Project" targetName="check-llvm-codegen-hexagon-loop-idiom" />
      <config projectName="Project" targetName="check-llvm-objectyaml-elf" />
      <config projectName="Project" targetName="install-LLVMPowerPCInfo" />
      <config projectName="Project" targetName="check-llvm-tools-gold-x86-v1.16" />
      <config projectName="Project" targetName="check-llvm-debuginfo-riscv" />
      <config projectName="Project" targetName="install-LLVMXCoreAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-executionengine-orclazy" />
      <config projectName="Project" targetName="check-llvm-tools-gold-x86-v1.12" />
      <config projectName="Project" targetName="install-LLVMLanaiCodeGen" />
      <config projectName="Project" targetName="LLVMipo" />
      <config projectName="Project" targetName="check-llvm-transforms-constanthoisting" />
      <config projectName="Project" targetName="LLVMDlltoolDriver" />
      <config projectName="Project" targetName="install-llvm-symbolizer" />
      <config projectName="Project" targetName="install-llvm-readelf-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-webassembly" />
      <config projectName="Project" targetName="check-llvm-transforms-stripsymbols" />
      <config projectName="Project" targetName="check-llvm-transforms-thinltobitcodewriter" />
      <config projectName="Project" targetName="check-llvm-transforms-nameanonglobals" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-mips64" />
      <config projectName="Project" targetName="install-llvm-readobj" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips1" />
      <config projectName="Project" targetName="check-llvm-transforms-bbvectorize-x86" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-size" />
      <config projectName="Project" targetName="BitcodeTests" />
      <config projectName="Project" targetName="install-LLVMSupport-stripped" />
      <config projectName="Project" targetName="check-llvm-analysis-regioninfo" />
      <config projectName="Project" targetName="install-llvm-objdump" />
      <config projectName="Project" targetName="install-opt" />
      <config projectName="Project" targetName="install-LLVMDebugInfoCodeView" />
      <config projectName="Project" targetName="ModuleMaker" />
      <config projectName="Project" targetName="install-LLVMNVPTXInfo" />
      <config projectName="Project" targetName="check-llvm-transforms-straightlinestrengthreduce-nvptx" />
      <config projectName="Project" targetName="LLVMHello" />
      <config projectName="Project" targetName="LLVMCore" />
      <config projectName="Project" targetName="InstCombineTableGen" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-extract" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-generic" />
      <config projectName="Project" targetName="install-llvm-cvtres-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-safestack-arm" />
      <config projectName="Project" targetName="LLVMSelectionDAG" />
      <config projectName="Project" targetName="LLVMXCoreDisassembler" />
      <config projectName="Project" targetName="llvm-PerfectShuffle" />
      <config projectName="Project" targetName="install-LLVMHexagonCodeGen" />
      <config projectName="Project" targetName="CodeGenTests" />
      <config projectName="Project" targetName="check-llvm-transforms-looprotate" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-llvm-ir" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-powerpc" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-arm" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-size-x86" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objcopy" />
      <config projectName="Project" targetName="install-yaml2obj-stripped" />
      <config projectName="Project" targetName="BugpointPasses" />
      <config projectName="Project" targetName="LLVMAMDGPUUtils" />
      <config projectName="Project" targetName="check-llvm-tools-sancov" />
      <config projectName="Project" targetName="check-llvm-transforms-util-predicateinfo" />
      <config projectName="Project" targetName="install-LLVMSparcDisassembler" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-dsp" />
      <config projectName="Project" targetName="check-lit" />
      <config projectName="Project" targetName="install-LLVMAArch64Disassembler" />
      <config projectName="Project" targetName="install-llvm-c-test-stripped" />
      <config projectName="Project" targetName="install-llvm-cat" />
      <config projectName="Project" targetName="check-llvm-other-x86" />
      <config projectName="Project" targetName="llvm-opt-report" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-opt-fuzzer" />
      <config projectName="Project" targetName="SecondLib" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-aarch64" />
      <config projectName="Project" targetName="check-llvm-symbolrewriter" />
      <config projectName="Project" targetName="install-LLVMLanaiInfo-stripped" />
      <config projectName="Project" targetName="install-LLVMX86CodeGen" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize" />
      <config projectName="Project" targetName="LLVMLanaiDesc" />
      <config projectName="Project" targetName="install-LLVMBPFInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-analysis-callgraph" />
      <config projectName="Project" targetName="check-llvm-analysis-assumptioncache" />
      <config projectName="Project" targetName="install-LLVMX86Utils-stripped" />
      <config projectName="Project" targetName="LLVMX86Utils" />
      <config projectName="Project" targetName="install-LLVMLanaiDesc-stripped" />
      <config projectName="Project" targetName="install-llvm-stress-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-mips-msa" />
      <config projectName="Project" targetName="check-llvm-analysis-loopaccessanalysis" />
      <config projectName="Project" targetName="install-LLVMTarget-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare-arm" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-indirect-jump-hazard" />
      <config projectName="Project" targetName="LLVMBinaryFormat" />
      <config projectName="Project" targetName="install-LLVMMCJIT" />
      <config projectName="Project" targetName="check-llvm-transforms-globalmerge" />
      <config projectName="Project" targetName="llvm-c-test" />
      <config projectName="Project" targetName="check-llvm-mc-avr" />
      <config projectName="Project" targetName="check-llvm-transforms-lowertypetests" />
      <config projectName="Project" targetName="install-LLVMLinker" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-mips32r6" />
      <config projectName="Project" targetName="AsmParserTests" />
      <config projectName="Project" targetName="install-LLVMFuzzMutate" />
      <config projectName="Project" targetName="check-llvm-codegen-arm-globalisel" />
      <config projectName="Project" targetName="install-llvm-objcopy" />
      <config projectName="Project" targetName="LLVMLibDriver" />
      <config projectName="Project" targetName="check-llvm-codegen-thumb" />
      <config projectName="Project" targetName="check-llvm-transforms-atomicexpand-sparc" />
      <config projectName="Project" targetName="install-LLVMAArch64AsmPrinter-stripped" />
      <config projectName="Project" targetName="LLVMHexagonAsmParser" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dwarfdump-aarch64" />
      <config projectName="Project" targetName="check-llvm-transforms-instnamer" />
      <config projectName="Project" targetName="check-llvm-transforms-functionimport" />
      <config projectName="Project" targetName="check-llvm-transforms-interleavedaccess-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-interleavedaccess" />
      <config projectName="Project" targetName="check-llvm-transforms-wholeprogramdevirt" />
      <config projectName="Project" targetName="install-LLVMAsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-skylakeserver" />
      <config projectName="Project" targetName="install-llvm-pdbutil" />
      <config projectName="Project" targetName="check-llvm-executionengine-orcmcjit" />
      <config projectName="Project" targetName="install-LLVMSystemZAsmPrinter-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-tailcall" />
      <config projectName="Project" targetName="check-llvm-analysis-divergenceanalysis-amdgpu" />
      <config projectName="Project" targetName="ScalarTests" />
      <config projectName="Project" targetName="check-llvm-tools-sancov-aarch64" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dwp-x86" />
      <config projectName="Project" targetName="install-LLVMMIRParser-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-mips" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-aarch64-cortexa57" />
      <config projectName="Project" targetName="LLVMSymbolize" />
      <config projectName="Project" targetName="check-llvm-debuginfo-aarch64" />
      <config projectName="Project" targetName="check-llvm-tools-opt-viewer" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dwarfdump-x86" />
      <config projectName="Project" targetName="install-LLVMScalarOpts-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-lto2" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-lit" />
      <config projectName="Project" targetName="LLVMPowerPCDisassembler" />
      <config projectName="Project" targetName="check-llvm-tools-obj2yaml" />
      <config projectName="Project" targetName="check-llvm-codegen-arc" />
      <config projectName="Project" targetName="LLVMLanaiAsmParser" />
      <config projectName="Project" targetName="check-llvm-feature" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-micromips32r3" />
      <config projectName="Project" targetName="install-LLVMSymbolize-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-x86-skylakeclient" />
      <config projectName="Project" targetName="install-LLVMXCoreCodeGen" />
      <config projectName="Project" targetName="LLVMMSP430Info" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-lib" />
      <config projectName="Project" targetName="install-llvm-diff-stripped" />
      <config projectName="Project" targetName="install-LLVMMCDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare-aarch64" />
      <config projectName="Project" targetName="LLVMSystemZAsmPrinter" />
      <config projectName="Project" targetName="install-LLVMLanaiAsmParser" />
      <config projectName="Project" targetName="check-llvm-bindings-llvm-c-arm" />
      <config projectName="Project" targetName="check-llvm-analysis-globalsmodref" />
      <config projectName="Project" targetName="LLVMObjectYAML" />
      <config projectName="Project" targetName="check-llvm-transforms-constprop" />
      <config projectName="Project" targetName="LLVMCoroutines" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-dwarfdump" />
      <config projectName="Project" targetName="check-llvm-mc-amdgpu" />
      <config projectName="Project" targetName="install-LLVMScalarOpts" />
      <config projectName="Project" targetName="install-LLVMNVPTXAsmPrinter-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopvectorize-amdgpu" />
      <config projectName="Project" targetName="check-llvm-transforms-tailcallelim" />
      <config projectName="Project" targetName="check-llvm-debuginfo-mir-x86" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-msa" />
      <config projectName="Project" targetName="check-llvm-analysis-costmodel-arm" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-cstmaterialization" />
      <config projectName="Project" targetName="install-LLVMAArch64Desc-stripped" />
      <config projectName="Project" targetName="check-llvm-debuginfo-mir-mips" />
      <config projectName="Project" targetName="LLVMAMDGPUAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-aarch64" />
      <config projectName="Project" targetName="install-LLVMProfileData" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cvtres" />
      <config projectName="Project" targetName="install-LLVMSystemZDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-arm" />
      <config projectName="Project" targetName="FileCheck" />
      <config projectName="Project" targetName="LTO_exports" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-vtabledump" />
      <config projectName="Project" targetName="llvm-cat" />
      <config projectName="Project" targetName="install-LLVMHexagonInfo" />
      <config projectName="Project" targetName="install-LLVMInstCombine" />
      <config projectName="Project" targetName="check-llvm-mc-aarch64-sve-assembler_tests" />
      <config projectName="Project" targetName="check-llvm-transforms-sink" />
      <config projectName="Project" targetName="check-llvm-instrumentation-hwaddresssanitizer-x86" />
      <config projectName="Project" targetName="install-LLVMXRay" />
      <config projectName="Project" targetName="install-LLVMNVPTXCodeGen" />
      <config projectName="Project" targetName="install-LLVMRuntimeDyld-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-safestack" />
      <config projectName="Project" targetName="check-llvm-lto-arm" />
      <config projectName="Project" targetName="install-LLVMBitWriter-stripped" />
      <config projectName="Project" targetName="LLVMBitWriter" />
      <config projectName="Project" targetName="check-llvm-executionengine-mcjit-remote" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-webassembly" />
      <config projectName="Project" targetName="check-llvm-transforms-constanthoisting-x86" />
      <config projectName="Project" targetName="install-LLVMAMDGPUUtils" />
      <config projectName="Project" targetName="LLVMSupport" />
      <config projectName="Project" targetName="LLVMBPFAsmParser" />
      <config projectName="Project" targetName="check-llvm-lto-x86" />
      <config projectName="Project" targetName="install-llvm-modextract" />
      <config projectName="Project" targetName="install-LLVMGlobalISel-stripped" />
      <config projectName="Project" targetName="LLVMIRReader" />
      <config projectName="Project" targetName="install-LLVMSparcCodeGen" />
      <config projectName="Project" targetName="install-LLVMMipsAsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-loopreroll" />
      <config projectName="Project" targetName="check-llvm-analysis-lint" />
      <config projectName="Project" targetName="install-LLVMMSP430AsmPrinter" />
      <config projectName="Project" targetName="install-LLVMHexagonAsmParser-stripped" />
      <config projectName="Project" targetName="install-lli" />
      <config projectName="Project" targetName="check-llvm-codegen-sparc" />
      <config projectName="Project" targetName="Kaleidoscope-Ch4" />
      <config projectName="Project" targetName="Kaleidoscope-Ch5" />
      <config projectName="Project" targetName="check-llvm-mc-mips-micromips32r6" />
      <config projectName="Project" targetName="install-llc" />
      <config projectName="Project" targetName="check-llvm-mc-mips-dspr2" />
      <config projectName="Project" targetName="install-LLVMLineEditor-stripped" />
      <config projectName="Project" targetName="install-LLVMX86Utils" />
      <config projectName="Project" targetName="install-LLVMAMDGPUDesc-stripped" />
      <config projectName="Project" targetName="DllOptionsTableGen" />
      <config projectName="Project" targetName="install-llvm-config-stripped" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-hexagon" />
      <config projectName="Project" targetName="LLVMObject" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump" />
      <config projectName="Project" targetName="LLVMLanaiDisassembler" />
      <config projectName="Project" targetName="ocaml_make_directory" />
      <config projectName="Project" targetName="install-LLVMARMAsmParser" />
      <config projectName="Project" targetName="install-LLVMMipsAsmPrinter" />
      <config projectName="Project" targetName="install-LLVMPowerPCAsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-safestack-x86" />
      <config projectName="Project" targetName="LLVMMIRParser" />
      <config projectName="Project" targetName="install-LLVMWindowsManifest-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunswitch" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare" />
      <config projectName="Project" targetName="BuildingAJIT-Ch4" />
      <config projectName="Project" targetName="BuildingAJIT-Ch3" />
      <config projectName="Project" targetName="BuildingAJIT-Ch2" />
      <config projectName="Project" targetName="BuildingAJIT-Ch1" />
      <config projectName="Project" targetName="check-llvm-metal-avr" />
      <config projectName="Project" targetName="llvm-pdbutil" />
      <config projectName="Project" targetName="check-llvm-mc-bpf" />
      <config projectName="Project" targetName="check-llvm-bugpoint" />
      <config projectName="Project" targetName="llvm-dwarfdump" />
      <config projectName="Project" targetName="check-llvm-instrumentation-instrprofiling" />
      <config projectName="Project" targetName="check-llvm-codegen-mips" />
      <config projectName="Project" targetName="install-LLVMARMDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-inferaddressspaces-nvptx" />
      <config projectName="Project" targetName="check-llvm-codegen-x86" />
      <config projectName="Project" targetName="check-llvm-transforms-separateconstoffsetfromgep-amdgpu" />
      <config projectName="Project" targetName="install-LLVMInterpreter" />
      <config projectName="Project" targetName="install-LLVMMipsInfo-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-aarch64-sve" />
      <config projectName="Project" targetName="install-llvm-mc-stripped" />
      <config projectName="Project" targetName="install-LLVMAMDGPUAsmPrinter" />
      <config projectName="Project" targetName="check-llvm-transforms-entryexitinstrumenter" />
      <config projectName="Project" targetName="llvm-cxxfilt" />
      <config projectName="Project" targetName="check-llvm-analysis-valuetracking" />
      <config projectName="Project" targetName="install-LLVMAnalysis" />
      <config projectName="Project" targetName="check-llvm-transforms-simplifycfg-amdgpu" />
      <config projectName="Project" targetName="check-llvm-mc-hexagon" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-nm-x86" />
      <config projectName="Project" targetName="UnitTests" />
      <config projectName="Project" targetName="check-llvm-analysis-memorydependenceanalysis" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cxxdump" />
      <config projectName="Project" targetName="check-llvm-transforms-syntheticcountspropagation" />
      <config projectName="Project" targetName="install-llvm-nm-stripped" />
      <config projectName="Project" targetName="LLVMGlobalISel" />
      <config projectName="Project" targetName="LLVMTableGen" />
      <config projectName="Project" targetName="LLVMTransformUtils" />
      <config projectName="Project" targetName="install-llvm-exegesis" />
      <config projectName="Project" targetName="check-llvm-debuginfo-mir-aarch64" />
      <config projectName="Project" targetName="not" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-modextract" />
      <config projectName="Project" targetName="check-llvm-transforms-naryreassociate" />
      <config projectName="Project" targetName="StripOptsTableGen" />
      <config projectName="Project" targetName="check-llvm-transforms-placesafepoints" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-mca-aarch64-exynos" />
      <config projectName="Project" targetName="check-llvm-analysis-cflaliasanalysis-andersen" />
      <config projectName="Project" targetName="obj2yaml" />
      <config projectName="Project" targetName="check-llvm-analysis-loopinfo" />
      <config projectName="Project" targetName="install-LLVMX86AsmParser-stripped" />
      <config projectName="Project" targetName="install-LLVMNVPTXAsmPrinter" />
      <config projectName="Project" targetName="llvm-ranlib" />
      <config projectName="Project" targetName="install-obj2yaml-stripped" />
      <config projectName="Project" targetName="install-llvm-strip" />
      <config projectName="Project" targetName="install-LLVMPasses-stripped" />
      <config projectName="Project" targetName="check-llvm-examples-kaleidoscope" />
      <config projectName="Project" targetName="check-llvm-instrumentation-instrprofiling-x86" />
      <config projectName="Project" targetName="LLVMXRay" />
      <config projectName="Project" targetName="LLVMSparcCodeGen" />
      <config projectName="Project" targetName="llvm-cvtres" />
      <config projectName="Project" targetName="install-sancov-stripped" />
      <config projectName="Project" targetName="install-LLVMMSP430Info-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-loopidiom-amdgpu" />
      <config projectName="Project" targetName="check-llvm-analysis-scopednoaliasaa" />
      <config projectName="Project" targetName="yaml-bench" />
      <config projectName="Project" targetName="install-LLVMAMDGPUDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-lanai" />
      <config projectName="Project" targetName="check-llvm-transforms-loopdataprefetch" />
      <config projectName="Project" targetName="install-LLVMBPFCodeGen" />
      <config projectName="Project" targetName="install-LLVMMSP430Desc-stripped" />
      <config projectName="Project" targetName="install-LLVMX86Info" />
      <config projectName="Project" targetName="check-llvm-transforms-loopidiom-arm" />
      <config projectName="Project" targetName="check-llvm-transforms-gvn-pre" />
      <config projectName="Project" targetName="check-llvm-transforms-bbvectorize" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips32r5" />
      <config projectName="Project" targetName="check-llvm-mc-mips-mips32r3" />
      <config projectName="Project" targetName="LLVMAsmParser" />
      <config projectName="Project" targetName="check-llvm-transforms-rewritestatepointsforgc-deopt-bundles" />
      <config projectName="Project" targetName="check-llvm-mc-markup" />
      <config projectName="Project" targetName="install-LLVMPowerPCDisassembler-stripped" />
      <config projectName="Project" targetName="install-LLVMLinker-stripped" />
      <config projectName="Project" targetName="install-LLVMMIRParser" />
      <config projectName="Project" targetName="install-LLVMX86Disassembler" />
      <config projectName="Project" targetName="check-llvm-mc-mips-cnmips" />
      <config projectName="Project" targetName="LLVMARMCodeGen" />
      <config projectName="Project" targetName="check-llvm-demangle" />
      <config projectName="Project" targetName="install-LLVMXCoreDesc-stripped" />
      <config projectName="Project" targetName="MSP430CommonTableGen" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-instverify" />
      <config projectName="Project" targetName="install-LLVMMipsInfo" />
      <config projectName="Project" targetName="check-llvm-mc-hexagon-instructions" />
      <config projectName="Project" targetName="install-dsymutil-stripped" />
      <config projectName="Project" targetName="check-llvm-debuginfo-webassembly" />
      <config projectName="Project" targetName="LLVMBPFDesc" />
      <config projectName="Project" targetName="check-llvm-mc-macho" />
      <config projectName="Project" targetName="cmake-exports" />
      <config projectName="Project" targetName="check-llvm-codegen-mips-longbranch" />
      <config projectName="Project" targetName="llvm-nm" />
      <config projectName="Project" targetName="check-llvm-analysis-divergenceanalysis-nvptx" />
      <config projectName="Project" targetName="check-llvm-transforms-lowerguardintrinsic" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cov" />
      <config projectName="Project" targetName="check-llvm-transforms-divrempairs-x86" />
      <config projectName="Project" targetName="check-llvm-analysis-basicaa" />
      <config projectName="Project" targetName="check-llvm-transforms-reassociate" />
      <config projectName="Project" targetName="LLVMMCParser" />
      <config projectName="Project" targetName="install-llvm-cxxfilt" />
      <config projectName="Project" targetName="check-llvm-transforms-reg2mem" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-mips" />
      <config projectName="Project" targetName="LLVMObjCARCOpts" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-objdump-hexagon" />
      <config projectName="Project" targetName="llvm-mt" />
      <config projectName="Project" targetName="check-llvm-analysis-ivusers" />
      <config projectName="Project" targetName="install-LLVMLibDriver-stripped" />
      <config projectName="Project" targetName="RcTableGen" />
      <config projectName="Project" targetName="check-llvm-instrumentation-boundschecking" />
      <config projectName="Project" targetName="check-llvm-codegen-avr-calling-conv" />
      <config projectName="Project" targetName="llvm-xray" />
      <config projectName="Project" targetName="Aryiele" />
      <config projectName="Project" targetName="install-LLVMLanaiAsmPrinter-stripped" />
      <config projectName="Project" targetName="UtilsTests" />
      <config projectName="Project" targetName="install-LLVMAArch64Info-stripped" />
      <config projectName="Project" targetName="llvm-mc" />
      <config projectName="Project" targetName="check-llvm-debuginfo-generic" />
      <config projectName="Project" targetName="check-llvm-mc-mips-dsp" />
      <config projectName="Project" targetName="install-LLVMLanaiDisassembler-stripped" />
      <config projectName="Project" targetName="check-llvm-tools-llvm-cfi-verify" />
      <config projectName="Project" targetName="install-llvm-dwarfdump-stripped" />
      <config projectName="Project" targetName="srpm" />
      <config projectName="Project" targetName="check-llvm-codegen-systemz-large" />
      <config projectName="Project" targetName="check-llvm-transforms-codegenprepare-amdgpu" />
      <config projectName="Project" targetName="install-LLVMInstrumentation" />
      <config projectName="Project" targetName="check-llvm-mc-disassembler-mips-micromips32r6" />
      <config projectName="Project" targetName="install-LLVMMC-stripped" />
      <config projectName="Project" targetName="check-llvm-transforms-partiallyinlinelibcalls-x86" />
      <config projectName="Project" targetName="install-LLVMDemangle-stripped" />
      <config projectName="Project" targetName="install-LLVMLibDriver" />
      <config projectName="Project" targetName="LLVMMipsInfo" />
      <config projectName="Project" targetName="check-llvm-codegen-aarch64-globalisel" />
      <config projectName="Project" targetName="check-llvm-codegen-msp430" />
      <config projectName="Project" targetName="verify-uselistorder" />
      <config projectName="Project" targetName="install-LLVMLanaiAsmParser-stripped" />
      <config projectName="Project" targetName="install-LLVMMipsAsmParser-stripped" />
      <config projectName="Project" targetName="check-llvm-object-mips" />
      <config projectName="Project" targetName="check-llvm-transforms-loopunroll-powerpc" />
      <config projectName="Project" targetName="check-llvm-integer" />
      <config projectName="Project" targetName="check-llvm-tools-lto" />
      <config projectName="Project" targetName="check-llvm-transforms-irce" />
      <config projectName="Project" targetName="check-llvm-transforms-slpvectorizer-nvptx" />
      <config projectName="Project" targetName="LLVMCFIVerify" />
      <config projectName="Project" targetName="LLVMPowerPCDesc" />
      <config projectName="Project" targetName="check-llvm-codegen-mir-nvptx" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="MinGW-x64-Debug" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_BUILD_TYPE=Debug" GENERATION_DIR="../Build/.Temp/CMake/MinGW_x64_Debug" />
      <configuration PROFILE_NAME="MinGW-x64-Release" CONFIG_NAME="Release" GENERATION_OPTIONS="-DCMAKE_BUILD_TYPE=Release" GENERATION_DIR="../Build/.Temp/CMake/MinGW_x64_Release" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e796a80c-b90d-40fc-a140-746f2d7f5762" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Aryiele/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Aryiele/CMakeLists.txt" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/cmake-build-debug/" />
    <ignored path="$PROJECT_DIR$/../Build/.Temp/CMake/MinGW_x64_Debug/" />
    <ignored path="$PROJECT_DIR$/../Build/.Temp/CMake/MinGW_x64_Release/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:MinGW-x64-Release" />
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="323">
              <caret line="19" column="3" selection-start-line="19" selection-start-column="3" selection-end-line="19" selection-end-column="41" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/Aryiele/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="312">
              <caret line="51" column="48" lean-forward="true" selection-start-line="51" selection-start-column="48" selection-end-line="51" selection-end-column="48" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/Vanir/CMakeLists.txt">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="187">
              <caret line="11" column="146" selection-start-line="11" selection-start-column="79" selection-end-line="11" selection-end-column="146" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>project</find>
      <find>a</find>
      <find>AESIR_INCLUDES_H</find>
      <find>AESIR_LOGGER_H</find>
      <find>GetTokenName</find>
      <find>GetTransitionTableColumn</find>
      <find>Space</find>
      <find>space</find>
      <find>Example</find>
      <find>std::to_string(time-&gt;tm_sec)</find>
      <find>ARYIELE_CONFIGURATION</find>
    </findStrings>
    <replaceStrings>
      <replace>ARYIELE_INCLUDES_H</replace>
      <replace>ARYIELE_LOGGER_H</replace>
      <replace>example</replace>
      <replace>(seconds.length() == 1 ? &quot;0&quot; + seconds : seconds)</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/Dependencies/LLVM/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/Aryiele/Core/Logger.h" />
        <option value="$PROJECT_DIR$/Aryiele/Tokenizer/TokenPrecedence.h" />
        <option value="$PROJECT_DIR$/Aryiele/Core/Includes.h" />
        <option value="$PROJECT_DIR$/Aryiele/Tokenizer/TokenTable.h" />
        <option value="$PROJECT_DIR$/Aryiele/Core/Keywords.h" />
        <option value="$PROJECT_DIR$/Aryiele/Main.cpp" />
        <option value="$PROJECT_DIR$/Aryiele/Tokenizer/Tokenizer.cpp" />
        <option value="$PROJECT_DIR$/Aryiele/Tokenizer/Tokenizer.h" />
        <option value="$PROJECT_DIR$/Aryiele/Parser/ParserToken.h" />
        <option value="$PROJECT_DIR$/Aryiele/Parser/ParserTokens.h" />
        <option value="$PROJECT_DIR$/Vanir/CMakeLists.txt" />
        <option value="$PROJECT_DIR$/Vanir/Logger.cpp" />
        <option value="$PROJECT_DIR$/Aryiele/CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="-8" />
    <option name="y" value="-8" />
    <option name="width" value="1936" />
    <option name="height" value="1066" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Sources" type="b2602c69:ProjectViewProjectNode" />
              <item name="Sources" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Sources" type="b2602c69:ProjectViewProjectNode" />
              <item name="Sources" type="462c0819:PsiDirectoryNode" />
              <item name="Aryiele" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Sources" type="b2602c69:ProjectViewProjectNode" />
              <item name="Sources" type="462c0819:PsiDirectoryNode" />
              <item name="Vanir" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="CMakeSettings" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.Aryiele">
    <configuration name="AArch64Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="AArch64Tests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="AArch64Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ADTTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ADTTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ADTTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AnalysisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="AnalysisTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="AnalysisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AsmParserTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="AsmParserTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="AsmParserTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BinaryFormatTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BinaryFormatTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BinaryFormatTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BitcodeTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BitcodeTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BitcodeTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CFIVerifyTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="CFIVerifyTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="CFIVerifyTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CodeGenTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="CodeGenTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="CodeGenTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoCodeViewTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DebugInfoCodeViewTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="DebugInfoCodeViewTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoDWARFTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DebugInfoDWARFTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="DebugInfoDWARFTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoMSFTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DebugInfoMSFTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="DebugInfoMSFTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DebugInfoPDBTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DebugInfoPDBTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="DebugInfoPDBTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DemangleTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DemangleTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="DemangleTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicLibraryTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DynamicLibraryTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="DynamicLibraryTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ExecutionEngineTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ExecutionEngineTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ExecutionEngineTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FuzzMutateTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="FuzzMutateTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="FuzzMutateTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="GlobalISelTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="GlobalISelTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="GlobalISelTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="IPOTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="IPOTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="IPOTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="IRTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="IRTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="IRTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisAArch64Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesisAArch64Tests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="LLVMExegesisAArch64Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisARMTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesisARMTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="LLVMExegesisARMTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesisTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="LLVMExegesisTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisX86Tests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesisX86Tests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="LLVMExegesisX86Tests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LineEditorTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LineEditorTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="LineEditorTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LinkerTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LinkerTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="LinkerTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MCJITTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="MCJITTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="MCJITTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MCTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="MCTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="MCTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MITests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="MITests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="MITests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjectTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ObjectTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ObjectTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjectYAMLTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ObjectYAMLTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ObjectYAMLTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OptionTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="OptionTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="OptionTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OrcJITTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="OrcJITTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="OrcJITTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PluginsTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="PluginsTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="PluginsTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProfileDataTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ProfileDataTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ProfileDataTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ScalarTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ScalarTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ScalarTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SupportTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="SupportTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="SupportTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UtilsTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="UtilsTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="UtilsTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="VectorizeTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="VectorizeTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="VectorizeTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XRayTests" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="XRayTests" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="XRayTests" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AArch64CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="AArch64CommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AMDGPUCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="AMDGPUCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ARMCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ARMCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Aryiele" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Aryiele" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Aryiele">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="AttributeCompatFuncTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="AttributeCompatFuncTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BPFCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BPFCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BrainF" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BrainF" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BrainF">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BugpointPasses" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BugpointPasses" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch1" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BuildingAJIT-Ch1" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BuildingAJIT-Ch1">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch2" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BuildingAJIT-Ch2" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BuildingAJIT-Ch2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch3" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BuildingAJIT-Ch3" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BuildingAJIT-Ch3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="BuildingAJIT-Ch4" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="BuildingAJIT-Ch4" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="BuildingAJIT-Ch4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="CvtResTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="CvtResTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DllOptionsTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DllOptionsTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="DynamicLibraryLib" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="DynamicLibraryLib" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Fibonacci" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Fibonacci" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Fibonacci">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="FileCheck" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="FileCheck" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="FileCheck">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HexagonCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="HexagonCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="HowToUseJIT" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="HowToUseJIT" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="HowToUseJIT">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="InstCombineTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="InstCombineTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch2" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch2" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch3" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch3" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch3">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch4" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch4" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch4">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch5" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch5" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch5">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch6" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch6" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch6">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch7" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch7" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch7">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch8" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch8" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch8">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope-Ch9" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope-Ch9" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="Kaleidoscope-Ch9">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Kaleidoscope" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Kaleidoscope" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="KillTheDoctor" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="KillTheDoctor" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="KillTheDoctor">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64AsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64AsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64AsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64CodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64CodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Desc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64Desc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Disassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64Disassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Info" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64Info" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAArch64Utils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAArch64Utils" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAMDGPUUtils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAMDGPUUtils" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMARMUtils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMARMUtils" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAggressiveInstCombine" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAggressiveInstCombine" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAnalysis" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAnalysis" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBPFAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBPFAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBPFCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBPFDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBPFDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBPFInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBPFInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBinaryFormat" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBinaryFormat" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitReader" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBitReader" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMBitWriter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMBitWriter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCFIVerify" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMCFIVerify" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCore" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMCore" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCoroutines" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMCoroutines" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMCoverage" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMCoverage" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoCodeView" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMDebugInfoCodeView" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoDWARF" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMDebugInfoDWARF" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoMSF" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMDebugInfoMSF" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDebugInfoPDB" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMDebugInfoPDB" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDemangle" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMDemangle" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMDlltoolDriver" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMDlltoolDriver" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExecutionEngine" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExecutionEngine" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesis" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesis" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisAArch64" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesisAArch64" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMExegesisX86" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMExegesisX86" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMFuzzMutate" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMFuzzMutate" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMGlobalISel" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMGlobalISel" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHello" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMHello" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMHexagonAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMHexagonCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMHexagonDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMHexagonDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMHexagonInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMHexagonInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMIRReader" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMIRReader" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInstCombine" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMInstCombine" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInstrumentation" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMInstrumentation" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMInterpreter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMInterpreter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLTO" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLTO" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLanaiAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLanaiAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLanaiCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLanaiDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLanaiDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLanaiInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLanaiInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLibDriver" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLibDriver" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLineEditor" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLineEditor" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMLinker" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMLinker" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMC" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMC" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMCDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCJIT" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMCJIT" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMCParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMCParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMIRParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMIRParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMSP430AsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430CodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMSP430CodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Desc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMSP430Desc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMSP430Info" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMSP430Info" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMipsAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMipsAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMipsCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMipsDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMipsDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMMipsInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMMipsInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMNVPTXAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMNVPTXCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMNVPTXDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMNVPTXInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMNVPTXInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObjCARCOpts" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMObjCARCOpts" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObject" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMObject" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMObjectYAML" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMObjectYAML" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOption" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMOption" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMOrcJIT" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMOrcJIT" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPasses" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPasses" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPowerPCAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPowerPCAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPowerPCCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPowerPCDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPowerPCDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMPowerPCInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMPowerPCInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMProfileData" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMProfileData" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMRuntimeDyld" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMRuntimeDyld" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMScalarOpts" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMScalarOpts" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSelectionDAG" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSelectionDAG" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSparcAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSparcAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSparcCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSparcDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSparcDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSparcInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSparcInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSupport" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSupport" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSymbolize" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSymbolize" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZAsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSystemZAsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSystemZAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSystemZCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSystemZDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSystemZDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMSystemZInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMSystemZInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTarget" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMTarget" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTestingSupport" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMTestingSupport" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMTransformUtils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMTransformUtils" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMVectorize" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMVectorize" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMWindowsManifest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMWindowsManifest" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86AsmParser" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86AsmParser" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86AsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86AsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86CodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86CodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Desc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86Desc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Disassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86Disassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Info" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86Info" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMX86Utils" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMX86Utils" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreAsmPrinter" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMXCoreAsmPrinter" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreCodeGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMXCoreCodeGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreDesc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMXCoreDesc" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreDisassembler" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMXCoreDisassembler" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXCoreInfo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMXCoreInfo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMXRay" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMXRay" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LLVMipo" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LLVMipo" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LTO" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LTO" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LTO_exports" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LTO_exports" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LanaiCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LanaiCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="LibOptionsTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="LibOptionsTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MSP430CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="MSP430CommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MipsCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="MipsCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ModuleMaker" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ModuleMaker" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="ModuleMaker">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MtTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="MtTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="NVPTXCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="NVPTXCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ObjcopyOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ObjcopyOptsTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="OptsTestTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="OptsTestTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PipSqueak" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="PipSqueak" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="PowerPCCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="PowerPCCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="RcTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="RcTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SecondLib" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="SecondLib" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SparcCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="SparcCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="StripOptsTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="StripOptsTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="SystemZCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="SystemZCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestPlugin" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="TestPlugin" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="UnitTests" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="UnitTests" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Vanir" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="Vanir" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="X86CommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="X86CommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="XCoreCommonTableGen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="XCoreCommonTableGen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="bugpoint" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="bugpoint" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="bugpoint">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-all" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="check-all" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="check-lit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="check-lit" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="cmake-exports" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="cmake-exports" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="count" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="count" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="count">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="dsymutil" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="dsymutil" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="dsymutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="gtest" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="gtest_main" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objdump-stripped" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="install-llvm-objdump-stripped" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="install-llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="install-llvm-objdump" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="intrinsics_gen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="intrinsics_gen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llc" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lli-child-target" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="lli-child-target" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="lli-child-target">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lli" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="lli" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="lli">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-PerfectShuffle" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-PerfectShuffle" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-PerfectShuffle">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ar" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-ar" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-ar">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-as" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-as" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-as">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-bcanalyzer" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-bcanalyzer" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-bcanalyzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-c-test" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-c-test" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-c-test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cat" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-cat" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-cat">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cfi-verify" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-cfi-verify" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-cfi-verify">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-config" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-config" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-config">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cov" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-cov" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-cov">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cvtres" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-cvtres" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-cvtres">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxdump" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-cxxdump" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-cxxdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-cxxfilt" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-cxxfilt" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-cxxfilt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-demangle-fuzzer" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-demangle-fuzzer" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-demangle-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-diff" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-diff" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-diff">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dis" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-dis" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-dis">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dlltool" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-dlltool" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dwarfdump" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-dwarfdump" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-dwarfdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-dwp" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-dwp" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-dwp">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-exegesis" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-exegesis" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-exegesis">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-extract" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-extract" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-extract">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-headers" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-headers" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-isel-fuzzer" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-isel-fuzzer" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-isel-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lib" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-lib" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-link" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-link" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-link">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lto" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-lto" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-lto">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-lto2" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-lto2" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-lto2">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-mc" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-mc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mca" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-mca" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-mca">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-modextract" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-modextract" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-modextract">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-mt" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-mt" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-mt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-nm" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-nm" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-nm">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-objcopy" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-objcopy" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-objcopy">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-objdump" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-objdump" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-objdump">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-opt-fuzzer" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-opt-fuzzer" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-opt-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-opt-report" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-opt-report" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-opt-report">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-pdbutil" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-pdbutil" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-pdbutil">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-profdata" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-profdata" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-profdata">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-ranlib" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-ranlib" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-rc" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-rc" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-rc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-readelf" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-readelf" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-readobj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-readobj" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-readobj">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-rtdyld" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-rtdyld" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-rtdyld">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-size" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-size" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-size">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-special-case-list-fuzzer" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-special-case-list-fuzzer" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-special-case-list-fuzzer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-split" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-split" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-split">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-stress" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-stress" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-stress">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-strings" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-strings" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-strings">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-strip" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-strip" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-symbolizer" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-symbolizer" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-symbolizer">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-tblgen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-tblgen" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-tblgen">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-test-depends" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-test-depends" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-undname" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-undname" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-undname">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm-xray" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm-xray" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="llvm-xray">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="llvm_vcsrevision_h" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="llvm_vcsrevision_h" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="not" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="not" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="not">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="obj2yaml" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="obj2yaml" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="obj2yaml">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="obj.llvm-tblgen" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="obj.llvm-tblgen" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ocaml_all" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ocaml_all" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ocaml_make_directory" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="ocaml_make_directory" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="opt" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="opt" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="opt">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="prepare-check-lit" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="prepare-check-lit" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sancov" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="sancov" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="sancov">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sanstats" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="sanstats" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="sanstats">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="srpm" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="srpm" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="test-depends" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="test-depends" CONFIG_NAME="MinGW-x64-Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="verify-uselistorder" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="verify-uselistorder" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="verify-uselistorder">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="yaml-bench" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="yaml-bench" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="yaml-bench">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="yaml2obj" type="CMakeRunConfiguration" factoryName="Application" PASS_PARENT_ENVS_2="true" PROJECT_NAME="Project" TARGET_NAME="yaml2obj" CONFIG_NAME="MinGW-x64-Debug" RUN_TARGET_PROJECT_NAME="Project" RUN_TARGET_NAME="yaml2obj">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.AArch64CommonTableGen" />
      <item itemvalue="Application.AMDGPUCommonTableGen" />
      <item itemvalue="Application.ARMCommonTableGen" />
      <item itemvalue="Application.Aryiele" />
      <item itemvalue="Application.AttributeCompatFuncTableGen" />
      <item itemvalue="Application.BPFCommonTableGen" />
      <item itemvalue="Application.BrainF" />
      <item itemvalue="Application.BugpointPasses" />
      <item itemvalue="Application.BuildingAJIT-Ch1" />
      <item itemvalue="Application.BuildingAJIT-Ch2" />
      <item itemvalue="Application.BuildingAJIT-Ch3" />
      <item itemvalue="Application.BuildingAJIT-Ch4" />
      <item itemvalue="Application.CvtResTableGen" />
      <item itemvalue="Application.DllOptionsTableGen" />
      <item itemvalue="Application.DynamicLibraryLib" />
      <item itemvalue="Application.Fibonacci" />
      <item itemvalue="Application.FileCheck" />
      <item itemvalue="Application.HexagonCommonTableGen" />
      <item itemvalue="Application.HowToUseJIT" />
      <item itemvalue="Application.InstCombineTableGen" />
      <item itemvalue="Application.Kaleidoscope-Ch2" />
      <item itemvalue="Application.Kaleidoscope-Ch3" />
      <item itemvalue="Application.Kaleidoscope-Ch4" />
      <item itemvalue="Application.Kaleidoscope-Ch5" />
      <item itemvalue="Application.Kaleidoscope-Ch6" />
      <item itemvalue="Application.Kaleidoscope-Ch7" />
      <item itemvalue="Application.Kaleidoscope-Ch8" />
      <item itemvalue="Application.Kaleidoscope-Ch9" />
      <item itemvalue="Application.Kaleidoscope" />
      <item itemvalue="Application.KillTheDoctor" />
      <item itemvalue="Application.LLVMAArch64AsmParser" />
      <item itemvalue="Application.LLVMAArch64AsmPrinter" />
      <item itemvalue="Application.LLVMAArch64CodeGen" />
      <item itemvalue="Application.LLVMAArch64Desc" />
      <item itemvalue="Application.LLVMAArch64Disassembler" />
      <item itemvalue="Application.LLVMAArch64Info" />
      <item itemvalue="Application.LLVMAArch64Utils" />
      <item itemvalue="Application.LLVMAMDGPUAsmParser" />
      <item itemvalue="Application.LLVMAMDGPUAsmPrinter" />
      <item itemvalue="Application.LLVMAMDGPUCodeGen" />
      <item itemvalue="Application.LLVMAMDGPUDesc" />
      <item itemvalue="Application.LLVMAMDGPUDisassembler" />
      <item itemvalue="Application.LLVMAMDGPUInfo" />
      <item itemvalue="Application.LLVMAMDGPUUtils" />
      <item itemvalue="Application.LLVMARMAsmParser" />
      <item itemvalue="Application.LLVMARMAsmPrinter" />
      <item itemvalue="Application.LLVMARMCodeGen" />
      <item itemvalue="Application.LLVMARMDesc" />
      <item itemvalue="Application.LLVMARMDisassembler" />
      <item itemvalue="Application.LLVMARMInfo" />
      <item itemvalue="Application.LLVMARMUtils" />
      <item itemvalue="Application.LLVMAggressiveInstCombine" />
      <item itemvalue="Application.LLVMAnalysis" />
      <item itemvalue="Application.LLVMAsmParser" />
      <item itemvalue="Application.LLVMAsmPrinter" />
      <item itemvalue="Application.LLVMBPFAsmParser" />
      <item itemvalue="Application.LLVMBPFAsmPrinter" />
      <item itemvalue="Application.LLVMBPFCodeGen" />
      <item itemvalue="Application.LLVMBPFDesc" />
      <item itemvalue="Application.LLVMBPFDisassembler" />
      <item itemvalue="Application.LLVMBPFInfo" />
      <item itemvalue="Application.LLVMBinaryFormat" />
      <item itemvalue="Application.LLVMBitReader" />
      <item itemvalue="Application.LLVMBitWriter" />
      <item itemvalue="Application.LLVMCFIVerify" />
      <item itemvalue="Application.LLVMCodeGen" />
      <item itemvalue="Application.LLVMCore" />
      <item itemvalue="Application.LLVMCoroutines" />
      <item itemvalue="Application.LLVMCoverage" />
      <item itemvalue="Application.LLVMDebugInfoCodeView" />
      <item itemvalue="Application.LLVMDebugInfoDWARF" />
      <item itemvalue="Application.LLVMDebugInfoMSF" />
      <item itemvalue="Application.LLVMDebugInfoPDB" />
      <item itemvalue="Application.LLVMDemangle" />
      <item itemvalue="Application.LLVMDlltoolDriver" />
      <item itemvalue="Application.LLVMExecutionEngine" />
      <item itemvalue="Application.LLVMExegesisAArch64" />
      <item itemvalue="Application.LLVMExegesisX86" />
      <item itemvalue="Application.LLVMExegesis" />
      <item itemvalue="Application.LLVMFuzzMutate" />
      <item itemvalue="Application.LLVMGlobalISel" />
      <item itemvalue="Application.LLVMHello" />
      <item itemvalue="Application.LLVMHexagonAsmParser" />
      <item itemvalue="Application.LLVMHexagonCodeGen" />
      <item itemvalue="Application.LLVMHexagonDesc" />
      <item itemvalue="Application.LLVMHexagonDisassembler" />
      <item itemvalue="Application.LLVMHexagonInfo" />
      <item itemvalue="Application.LLVMIRReader" />
      <item itemvalue="Application.LLVMInstCombine" />
      <item itemvalue="Application.LLVMInstrumentation" />
      <item itemvalue="Application.LLVMInterpreter" />
      <item itemvalue="Application.LLVMLTO" />
      <item itemvalue="Application.LLVMLanaiAsmParser" />
      <item itemvalue="Application.LLVMLanaiAsmPrinter" />
      <item itemvalue="Application.LLVMLanaiCodeGen" />
      <item itemvalue="Application.LLVMLanaiDesc" />
      <item itemvalue="Application.LLVMLanaiDisassembler" />
      <item itemvalue="Application.LLVMLanaiInfo" />
      <item itemvalue="Application.LLVMLibDriver" />
      <item itemvalue="Application.LLVMLineEditor" />
      <item itemvalue="Application.LLVMLinker" />
      <item itemvalue="Application.LLVMMCDisassembler" />
      <item itemvalue="Application.LLVMMCJIT" />
      <item itemvalue="Application.LLVMMCParser" />
      <item itemvalue="Application.LLVMMC" />
      <item itemvalue="Application.LLVMMIRParser" />
      <item itemvalue="Application.LLVMMSP430AsmPrinter" />
      <item itemvalue="Application.LLVMMSP430CodeGen" />
      <item itemvalue="Application.LLVMMSP430Desc" />
      <item itemvalue="Application.LLVMMSP430Info" />
      <item itemvalue="Application.LLVMMipsAsmParser" />
      <item itemvalue="Application.LLVMMipsAsmPrinter" />
      <item itemvalue="Application.LLVMMipsCodeGen" />
      <item itemvalue="Application.LLVMMipsDesc" />
      <item itemvalue="Application.LLVMMipsDisassembler" />
      <item itemvalue="Application.LLVMMipsInfo" />
      <item itemvalue="Application.LLVMNVPTXAsmPrinter" />
      <item itemvalue="Application.LLVMNVPTXCodeGen" />
      <item itemvalue="Application.LLVMNVPTXDesc" />
      <item itemvalue="Application.LLVMNVPTXInfo" />
      <item itemvalue="Application.LLVMObjCARCOpts" />
      <item itemvalue="Application.LLVMObjectYAML" />
      <item itemvalue="Application.LLVMObject" />
      <item itemvalue="Application.LLVMOption" />
      <item itemvalue="Application.LLVMOrcJIT" />
      <item itemvalue="Application.LLVMPasses" />
      <item itemvalue="Application.LLVMPowerPCAsmParser" />
      <item itemvalue="Application.LLVMPowerPCAsmPrinter" />
      <item itemvalue="Application.LLVMPowerPCCodeGen" />
      <item itemvalue="Application.LLVMPowerPCDesc" />
      <item itemvalue="Application.LLVMPowerPCDisassembler" />
      <item itemvalue="Application.LLVMPowerPCInfo" />
      <item itemvalue="Application.LLVMProfileData" />
      <item itemvalue="Application.LLVMRuntimeDyld" />
      <item itemvalue="Application.LLVMScalarOpts" />
      <item itemvalue="Application.LLVMSelectionDAG" />
      <item itemvalue="Application.LLVMSparcAsmParser" />
      <item itemvalue="Application.LLVMSparcAsmPrinter" />
      <item itemvalue="Application.LLVMSparcCodeGen" />
      <item itemvalue="Application.LLVMSparcDesc" />
      <item itemvalue="Application.LLVMSparcDisassembler" />
      <item itemvalue="Application.LLVMSparcInfo" />
      <item itemvalue="Application.LLVMSupport" />
      <item itemvalue="Application.LLVMSymbolize" />
      <item itemvalue="Application.LLVMSystemZAsmParser" />
      <item itemvalue="Application.LLVMSystemZAsmPrinter" />
      <item itemvalue="Application.LLVMSystemZCodeGen" />
      <item itemvalue="Application.LLVMSystemZDesc" />
      <item itemvalue="Application.LLVMSystemZDisassembler" />
      <item itemvalue="Application.LLVMSystemZInfo" />
      <item itemvalue="Application.LLVMTableGen" />
      <item itemvalue="Application.LLVMTarget" />
      <item itemvalue="Application.LLVMTestingSupport" />
      <item itemvalue="Application.LLVMTransformUtils" />
      <item itemvalue="Application.LLVMVectorize" />
      <item itemvalue="Application.LLVMWindowsManifest" />
      <item itemvalue="Application.LLVMX86AsmParser" />
      <item itemvalue="Application.LLVMX86AsmPrinter" />
      <item itemvalue="Application.LLVMX86CodeGen" />
      <item itemvalue="Application.LLVMX86Desc" />
      <item itemvalue="Application.LLVMX86Disassembler" />
      <item itemvalue="Application.LLVMX86Info" />
      <item itemvalue="Application.LLVMX86Utils" />
      <item itemvalue="Application.LLVMXCoreAsmPrinter" />
      <item itemvalue="Application.LLVMXCoreCodeGen" />
      <item itemvalue="Application.LLVMXCoreDesc" />
      <item itemvalue="Application.LLVMXCoreDisassembler" />
      <item itemvalue="Application.LLVMXCoreInfo" />
      <item itemvalue="Application.LLVMXRay" />
      <item itemvalue="Application.LLVMipo" />
      <item itemvalue="Application.LTO" />
      <item itemvalue="Application.LTO_exports" />
      <item itemvalue="Application.LanaiCommonTableGen" />
      <item itemvalue="Application.LibOptionsTableGen" />
      <item itemvalue="Application.MSP430CommonTableGen" />
      <item itemvalue="Application.MipsCommonTableGen" />
      <item itemvalue="Application.ModuleMaker" />
      <item itemvalue="Application.MtTableGen" />
      <item itemvalue="Application.NVPTXCommonTableGen" />
      <item itemvalue="Application.ObjcopyOptsTableGen" />
      <item itemvalue="Application.OptsTestTableGen" />
      <item itemvalue="Application.PipSqueak" />
      <item itemvalue="Application.PowerPCCommonTableGen" />
      <item itemvalue="Application.RcTableGen" />
      <item itemvalue="Application.SecondLib" />
      <item itemvalue="Application.SparcCommonTableGen" />
      <item itemvalue="Application.StripOptsTableGen" />
      <item itemvalue="Application.SystemZCommonTableGen" />
      <item itemvalue="Application.TestPlugin" />
      <item itemvalue="Application.UnitTests" />
      <item itemvalue="Application.Vanir" />
      <item itemvalue="Application.X86CommonTableGen" />
      <item itemvalue="Application.XCoreCommonTableGen" />
      <item itemvalue="Application.bugpoint" />
      <item itemvalue="Application.check-all" />
      <item itemvalue="Application.check-lit" />
      <item itemvalue="Application.cmake-exports" />
      <item itemvalue="Application.count" />
      <item itemvalue="Application.dsymutil" />
      <item itemvalue="Application.gtest" />
      <item itemvalue="Application.gtest_main" />
      <item itemvalue="Application.install-llvm-objdump-stripped" />
      <item itemvalue="Application.install-llvm-objdump" />
      <item itemvalue="Application.intrinsics_gen" />
      <item itemvalue="Application.llc" />
      <item itemvalue="Application.lli-child-target" />
      <item itemvalue="Application.lli" />
      <item itemvalue="Application.llvm-PerfectShuffle" />
      <item itemvalue="Application.llvm-ar" />
      <item itemvalue="Application.llvm-as" />
      <item itemvalue="Application.llvm-bcanalyzer" />
      <item itemvalue="Application.llvm-c-test" />
      <item itemvalue="Application.llvm-cat" />
      <item itemvalue="Application.llvm-cfi-verify" />
      <item itemvalue="Application.llvm-config" />
      <item itemvalue="Application.llvm-cov" />
      <item itemvalue="Application.llvm-cvtres" />
      <item itemvalue="Application.llvm-cxxdump" />
      <item itemvalue="Application.llvm-cxxfilt" />
      <item itemvalue="Application.llvm-demangle-fuzzer" />
      <item itemvalue="Application.llvm-diff" />
      <item itemvalue="Application.llvm-dis" />
      <item itemvalue="Application.llvm-dlltool" />
      <item itemvalue="Application.llvm-dwarfdump" />
      <item itemvalue="Application.llvm-dwp" />
      <item itemvalue="Application.llvm-exegesis" />
      <item itemvalue="Application.llvm-extract" />
      <item itemvalue="Application.llvm-headers" />
      <item itemvalue="Application.llvm-isel-fuzzer" />
      <item itemvalue="Application.llvm-lib" />
      <item itemvalue="Application.llvm-link" />
      <item itemvalue="Application.llvm-lto2" />
      <item itemvalue="Application.llvm-lto" />
      <item itemvalue="Application.llvm-mc" />
      <item itemvalue="Application.llvm-mca" />
      <item itemvalue="Application.llvm-modextract" />
      <item itemvalue="Application.llvm-mt" />
      <item itemvalue="Application.llvm-nm" />
      <item itemvalue="Application.llvm-objcopy" />
      <item itemvalue="Application.llvm-objdump" />
      <item itemvalue="Application.llvm-opt-fuzzer" />
      <item itemvalue="Application.llvm-opt-report" />
      <item itemvalue="Application.llvm-pdbutil" />
      <item itemvalue="Application.llvm-profdata" />
      <item itemvalue="Application.llvm-ranlib" />
      <item itemvalue="Application.llvm-rc" />
      <item itemvalue="Application.llvm-readelf" />
      <item itemvalue="Application.llvm-readobj" />
      <item itemvalue="Application.llvm-rtdyld" />
      <item itemvalue="Application.llvm-size" />
      <item itemvalue="Application.llvm-special-case-list-fuzzer" />
      <item itemvalue="Application.llvm-split" />
      <item itemvalue="Application.llvm-stress" />
      <item itemvalue="Application.llvm-strings" />
      <item itemvalue="Application.llvm-strip" />
      <item itemvalue="Application.llvm-symbolizer" />
      <item itemvalue="Application.llvm-tblgen" />
      <item itemvalue="Application.llvm-test-depends" />
      <item itemvalue="Application.llvm-undname" />
      <item itemvalue="Application.llvm-xray" />
      <item itemvalue="Application.llvm_vcsrevision_h" />
      <item itemvalue="Application.not" />
      <item itemvalue="Application.obj2yaml" />
      <item itemvalue="Application.obj.llvm-tblgen" />
      <item itemvalue="Application.ocaml_all" />
      <item itemvalue="Application.ocaml_make_directory" />
      <item itemvalue="Application.opt" />
      <item itemvalue="Application.prepare-check-lit" />
      <item itemvalue="Application.sancov" />
      <item itemvalue="Application.sanstats" />
      <item itemvalue="Application.srpm" />
      <item itemvalue="Application.test-depends" />
      <item itemvalue="Application.verify-uselistorder" />
      <item itemvalue="Application.yaml-bench" />
      <item itemvalue="Application.yaml2obj" />
      <item itemvalue="Google Test.AArch64Tests" />
      <item itemvalue="Google Test.ADTTests" />
      <item itemvalue="Google Test.AnalysisTests" />
      <item itemvalue="Google Test.AsmParserTests" />
      <item itemvalue="Google Test.BinaryFormatTests" />
      <item itemvalue="Google Test.BitcodeTests" />
      <item itemvalue="Google Test.CFIVerifyTests" />
      <item itemvalue="Google Test.CodeGenTests" />
      <item itemvalue="Google Test.DebugInfoCodeViewTests" />
      <item itemvalue="Google Test.DebugInfoDWARFTests" />
      <item itemvalue="Google Test.DebugInfoMSFTests" />
      <item itemvalue="Google Test.DebugInfoPDBTests" />
      <item itemvalue="Google Test.DemangleTests" />
      <item itemvalue="Google Test.DynamicLibraryTests" />
      <item itemvalue="Google Test.ExecutionEngineTests" />
      <item itemvalue="Google Test.FuzzMutateTests" />
      <item itemvalue="Google Test.GlobalISelTests" />
      <item itemvalue="Google Test.IPOTests" />
      <item itemvalue="Google Test.IRTests" />
      <item itemvalue="Google Test.LLVMExegesisAArch64Tests" />
      <item itemvalue="Google Test.LLVMExegesisARMTests" />
      <item itemvalue="Google Test.LLVMExegesisTests" />
      <item itemvalue="Google Test.LLVMExegesisX86Tests" />
      <item itemvalue="Google Test.LineEditorTests" />
      <item itemvalue="Google Test.LinkerTests" />
      <item itemvalue="Google Test.MCJITTests" />
      <item itemvalue="Google Test.MCTests" />
      <item itemvalue="Google Test.MITests" />
      <item itemvalue="Google Test.ObjectTests" />
      <item itemvalue="Google Test.ObjectYAMLTests" />
      <item itemvalue="Google Test.OptionTests" />
      <item itemvalue="Google Test.OrcJITTests" />
      <item itemvalue="Google Test.PluginsTests" />
      <item itemvalue="Google Test.ProfileDataTests" />
      <item itemvalue="Google Test.ScalarTests" />
      <item itemvalue="Google Test.SupportTests" />
      <item itemvalue="Google Test.UtilsTests" />
      <item itemvalue="Google Test.VectorizeTests" />
      <item itemvalue="Google Test.XRayTests" />
    </list>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e796a80c-b90d-40fc-a140-746f2d7f5762" name="Default Changelist" comment="" />
      <created>1547576318725</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1547576318725</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1936" height="1066" extended-state="6" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.14285715" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.3290461" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Database Changes" order="7" />
      <window_info anchor="bottom" id="Messages" order="8" weight="0.25294748" />
      <window_info anchor="bottom" id="Terminal" order="9" weight="0.3290461" />
      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" />
      <window_info anchor="bottom" id="Version Control" order="11" weight="0.3290461" />
      <window_info active="true" anchor="bottom" id="CMake" order="12" visible="true" weight="0.3290461" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Database" order="3" />
    </layout>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/Dependencies/LLVM/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="119">
          <caret line="43" column="74" selection-start-line="43" selection-start-column="74" selection-end-line="43" selection-end-column="74" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Dependencies/LLVM/cmake/modules/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="431">
          <caret line="137" selection-start-line="137" selection-end-line="137" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Dependencies/LLVM/cmake/modules/LLVM-Config.cmake">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="217">
          <caret line="209" column="27" selection-start-line="209" selection-start-column="24" selection-end-line="209" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/Token.cpp">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Core/Keywords.h" />
    <entry file="file://$PROJECT_DIR$/Aryiele/Core/Includes.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="119">
          <caret line="7" column="20" selection-start-line="7" selection-start-column="20" selection-end-line="7" selection-end-column="20" />
          <folding>
            <element signature="e#55#80#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Core/Logger.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="340">
          <caret line="20" column="56" selection-start-line="20" selection-start-column="56" selection-end-line="20" selection-end-column="56" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/Tokenizer.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="574">
          <caret line="255" column="33" selection-start-line="255" selection-start-column="33" selection-end-line="255" selection-end-column="33" />
          <folding>
            <element signature="e#0#40#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/Token.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="51">
          <caret line="3" column="9" selection-start-line="3" selection-start-column="9" selection-end-line="3" selection-end-column="9" />
          <folding>
            <element signature="e#49#66#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/TokenTypes.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="204">
          <caret line="12" column="17" selection-start-line="12" selection-start-column="17" selection-end-line="12" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/TokenTable.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="340">
          <caret line="20" column="11" selection-start-line="20" selection-start-column="11" selection-end-line="20" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/TokenPrecedence.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="8" column="4" selection-start-line="8" selection-start-column="4" selection-end-line="8" selection-end-column="4" />
          <folding>
            <element signature="e#69#103#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/Tokenizer.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="357">
          <caret line="21" column="28" selection-start-line="21" selection-start-column="28" selection-end-line="21" selection-end-column="28" />
          <folding>
            <element signature="e#57#74#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Tokenizer/TokenPrecedence.cpp">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Parser/ParserTokens.h">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1122">
          <caret line="66" column="12" selection-start-line="66" selection-start-column="12" selection-end-line="66" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/Main.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="11" column="6" selection-start-line="11" selection-start-column="6" selection-end-line="11" selection-end-column="6" />
          <folding>
            <element signature="e#0#34#0" expanded="true" />
            <element signature="e#104#124#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Vanir/Logger.cpp">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1838">
          <caret line="233" lean-forward="true" selection-start-line="233" selection-end-line="233" />
          <folding>
            <element signature="e#0#25#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="323">
          <caret line="19" column="3" selection-start-line="19" selection-start-column="3" selection-end-line="19" selection-end-column="41" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Vanir/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="11" column="146" selection-start-line="11" selection-start-column="79" selection-end-line="11" selection-end-column="146" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Aryiele/CMakeLists.txt">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="312">
          <caret line="51" column="48" lean-forward="true" selection-start-line="51" selection-start-column="48" selection-end-line="51" selection-end-column="48" />
        </state>
      </provider>
    </entry>
  </component>
</project>